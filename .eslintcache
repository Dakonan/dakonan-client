[{"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\index.js":"1","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\App.js":"2","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\reportWebVitals.js":"3","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\redux\\store\\index.js":"4","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\pages\\MainPage.js":"5","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\pages\\RegisterPage.js":"6","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\pages\\LoginPage.js":"7","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\pages\\Room.js":"8","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\pages\\GamePage.js":"9","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\pages\\WaitingRoom.js":"10","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\utils.js":"11","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\ModalLogin.js":"12","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\RoomList.js":"13","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\JoinBox.js":"14","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\Navbar.js":"15","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\redux\\reducers\\index.js":"16","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\redux\\actions\\index.js":"17","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\inputField.js":"18","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\RoomCard.js":"19","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\Board.js":"20","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\redux\\reducers\\playersReducer.js":"21","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\StatusBar.js":"22","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\redux\\reducers\\roomReducer.js":"23","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\InputField.js":"24","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\FinishAnnouncement.js":"25","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\index.js":"26","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\BigHole.js":"27","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\Hole.js":"28","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\Pebble.js":"29","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\LeaderBoard.js":"30","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\helpers\\index.js":"31","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\Header.js":"32"},{"size":725,"mtime":1611733879806,"results":"33","hashOfConfig":"34"},{"size":846,"mtime":1611733686864,"results":"35","hashOfConfig":"34"},{"size":375,"mtime":1611536130333,"results":"36","hashOfConfig":"34"},{"size":226,"mtime":1611536130332,"results":"37","hashOfConfig":"34"},{"size":2054,"mtime":1611733879842,"results":"38","hashOfConfig":"34"},{"size":3782,"mtime":1611733879848,"results":"39","hashOfConfig":"34"},{"size":2338,"mtime":1611733879826,"results":"40","hashOfConfig":"34"},{"size":2967,"mtime":1611733879858,"results":"41","hashOfConfig":"34"},{"size":3027,"mtime":1611733879817,"results":"42","hashOfConfig":"34"},{"size":2983,"mtime":1611733687911,"results":"43","hashOfConfig":"34"},{"size":4561,"mtime":1611733687918,"results":"44","hashOfConfig":"34"},{"size":1616,"mtime":1611733879699,"results":"45","hashOfConfig":"34"},{"size":1096,"mtime":1611733879744,"results":"46","hashOfConfig":"34"},{"size":1115,"mtime":1611733879693,"results":"47","hashOfConfig":"34"},{"size":1191,"mtime":1611733879710,"results":"48","hashOfConfig":"34"},{"size":257,"mtime":1611536130331,"results":"49","hashOfConfig":"34"},{"size":4029,"mtime":1611733879863,"results":"50","hashOfConfig":"34"},{"size":928,"mtime":1611733879786,"results":"51","hashOfConfig":"34"},{"size":2762,"mtime":1611733879720,"results":"52","hashOfConfig":"34"},{"size":4257,"mtime":1611733879674,"results":"53","hashOfConfig":"34"},{"size":410,"mtime":1611536130331,"results":"54","hashOfConfig":"34"},{"size":820,"mtime":1611733879749,"results":"55","hashOfConfig":"34"},{"size":726,"mtime":1611733687917,"results":"56","hashOfConfig":"34"},{"size":928,"mtime":1611733879786,"results":"57","hashOfConfig":"34"},{"size":2843,"mtime":1611733879678,"results":"58","hashOfConfig":"34"},{"size":564,"mtime":1611733879781,"results":"59","hashOfConfig":"34"},{"size":636,"mtime":1611733879668,"results":"60","hashOfConfig":"34"},{"size":1156,"mtime":1611733879686,"results":"61","hashOfConfig":"34"},{"size":879,"mtime":1611733879715,"results":"62","hashOfConfig":"34"},{"size":1767,"mtime":1611733879697,"results":"63","hashOfConfig":"34"},{"size":916,"mtime":1611733879802,"results":"64","hashOfConfig":"34"},{"size":171,"mtime":1611733879682,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c3i9lp",{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":2,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\index.js",[],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\App.js",["143","144","145"],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\reportWebVitals.js",[],["146","147"],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\redux\\store\\index.js",[],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\pages\\MainPage.js",["148","149","150","151","152","153","154"],"import React from 'react'\r\nimport ModalLogin from '../components/ModalLogin'\r\n\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <div className=\"container\" style={{display: 'flex', justifyContent: 'center', alignSelf: 'center'}}>\r\n            <div className=\"container d-flex justify-content-center align-items-center shadow-lg mx-auto\" style={{height: '20vw', width: '30vw'}}>\r\n                <div>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <h1>DAKONAN</h1>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center\"  >\r\n                        <button className=\"btn btn-warning mr-3 w-60\">How To Play</button>\r\n                        <ModalLogin></ModalLogin>\r\n                        {/* <button onClick={() => history.push('/register')} className=\"btn btn-dark w-50\">Play</button> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\pages\\RegisterPage.js",["155"],"import { useState } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { CustomButton } from '../components'\r\nimport { register } from '../redux/actions'\r\n\r\nconst RegisterPage = () => {\r\n  const dispatch = useDispatch()\r\n  // const allPlayer = useSelector(state => state.players.allPlayer)\r\n  const [formInput, setFormInput] = useState({\r\n    email: '',\r\n    username: '',\r\n    password: ''\r\n  })\r\n\r\n  const [errors, setErrors] = useState({\r\n    email: false,\r\n    username: false,\r\n    password: false\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name\r\n    const value = e.target.value\r\n    const obj = {...formInput}\r\n    obj[name] = value\r\n    setFormInput(obj)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    let errorsMessage = false\r\n    let newError = {\r\n      email: false,\r\n      username: false,\r\n      password: false,\r\n  }\r\n\r\n    if(formInput.email.length === 0 || formInput.email.trim().length === 0) {\r\n      errorsMessage = true\r\n      newError.email = 'email is required and valid email'\r\n    }\r\n    if(!formInput.username.length === 0 || formInput.username.trim().length === 0) {\r\n      errorsMessage = true\r\n      newError.username = 'username is required'\r\n    }\r\n    if(formInput.password.length < 6 || formInput.password.trim().length < 6) {\r\n      errorsMessage = true\r\n      newError.password = 'password is required and minimum 6 character'\r\n    }    \r\n    if(errorsMessage) {\r\n      errorsMessage = false\r\n      setErrors(newError)\r\n    }\r\n\r\n    if (formInput.email && formInput.username && formInput.password.length >= 6) {\r\n      const payload = {\r\n        email: formInput.email,\r\n        username: formInput.username,\r\n        password: formInput.password\r\n      }\r\n      dispatch(register(payload))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label >Email</label>\r\n          <input name=\"email\" onChange={handleChange} type=\"email\" className=\"form-control\" placeholder=\"Enter Your Username\"/>\r\n          {\r\n            errors.email ?\r\n            <div className=\"error-email\">\r\n              <span>{errors.email}</span>\r\n            </div>\r\n            : null\r\n          }\r\n          </div>\r\n            <div className=\"form-group\">\r\n              <label >USERNAME</label>\r\n              <input name=\"username\" onChange={handleChange} type=\"text\" className=\"form-control\" placeholder=\"Enter Your Username\"/>\r\n              {\r\n                errors.username ?\r\n                <div className=\"error-username\">\r\n                  <span>{errors.username}</span>\r\n                </div>\r\n                : null\r\n              }\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label >PASSWORD</label>\r\n              <input name=\"password\" onChange={handleChange} type=\"password\" className=\"form-control\" placeholder=\"Enter Your Username\"/>\r\n              {\r\n                errors.password ?\r\n                <div className=\"error-password\">\r\n                  <span>{errors.password}</span>\r\n                </div>\r\n                : null\r\n              }\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <CustomButton className=\"btn btn-dark mt-2\" type=\"submit\">\r\n                Register\r\n              </CustomButton>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default RegisterPage","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\pages\\LoginPage.js",[],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\pages\\Room.js",["156"],"import { useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createRoom, updateRoom, updatedRoom } from '../redux/actions'\r\nimport { RoomList, JoinBox, NavbarTop } from '../components'\r\nimport { useHistory } from 'react-router-dom'\r\nimport NavbarTop from '../components/Navbar'\r\nimport Swal from 'sweetalert2'\r\nimport { updatedRoom } from '../redux/actions'\r\nimport dakonan from '../assets/dakonan.png'\r\nimport stars from '../assets/stars.gif'\r\n\r\nconst Room = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const username = localStorage.username\r\n  let rooms = useSelector(state => state.rooms.data)\r\n  \r\n  useEffect(() => {\r\n    console.log(rooms, 'di room page')\r\n    dispatch(updatedRoom())\r\n  }, [rooms])\r\n\r\n  useEffect(() => {\r\n      dispatch(updateRoom())\r\n  },[dispatch])\r\n\r\n  useEffect(() => {\r\n    let isLoggedIn = localStorage.access_token\r\n    if(!isLoggedIn) {\r\n      history.push('/')\r\n    }\r\n  }, [])\r\n\r\n  const handleCreateRoom = (roomName) => {\r\n    let isAlreadyUsed\r\n    isAlreadyUsed = rooms.findIndex(room => {\r\n      return room.name === roomName\r\n    })\r\n    if(isAlreadyUsed === -1 || !roomName) {\r\n      let payload = {\r\n        roomName,\r\n        username\r\n      }\r\n      dispatch(createRoom(payload))\r\n      history.push(`/game/${roomName}`)\r\n    } else {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Room Name Already Used'\r\n      })\r\n    }\r\n  }  \r\n  return (\r\n    <>\r\n      <section style={{\r\n        backgroundColor: 'blue',\r\n        padding: '0px 20px',\r\n        backgroundImage: `url(${stars})`,\r\n        backgroundSize: '50%',\r\n        backgroundRepeat: 'repeat',\r\n        display: 'flex', justifyContent: 'space-between'\r\n      }}>\r\n      \r\n      <NavbarTop username={username}></NavbarTop>\r\n\r\n      <div className=\"col-12\">\r\n        <div className=\"row room-body justify-content-center\">\r\n          <div className=\"row col-8 justify-content-center\">\r\n            <div className=\"col-12\">\r\n              <img src={dakonan} class=\"dakonan\" style={{\r\n                maxWidth: '180px',\r\n                paddingBottom: '20px',\r\n                filter: 'drop-shadow(2px 2px 0 black) drop-shadow(-2px 2px 0 black)'\r\n              }}/>\r\n            </div>\r\n              <div className='col-lg-5 col-sm-12'>\r\n                <JoinBox></JoinBox>\r\n              </div>\r\n            <div className=\"col-lg-7 col-sm-12\">\r\n              <RoomList rooms={rooms} handleCreateRoom={handleCreateRoom}></RoomList>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nexport default Room","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\pages\\GamePage.js",["157","158","159","160","161","162","163","164","165","166"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport { Board, StatusBar, NavbarTop } from '../components'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { makeMove, emptyHomes } from '../utils'\r\nimport io from 'socket.io-client'\r\nimport Peer from \"simple-peer\";\r\nimport { gameStart, readyToRematch, updateGameDetail } from '../redux/actions'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport fullPageImage from '../assets/GameContainer.png'\r\nimport FinishAnnouncement from '../components/FinishAnnouncement'\r\nimport WaitingRoom from './WaitingRoom'\r\nimport microphone from '../Icons/microphone.svg'\r\nimport microphonestop from '../Icons/microphone-stop.svg'\r\n\r\nconst socket = io('https://dakonan-server.herokuapp.com')\r\n// const socket = io('http://localhost:4000')\r\n\r\nconst START_AMOUNT = 4\r\n\r\nconst intialState = {\r\n  player: 0,\r\n  board: emptyHomes(Array(14).fill(START_AMOUNT)),\r\n  isOver: false,\r\n  message: ''\r\n}\r\n\r\nconst Video = (props) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n      props.peer.on(\"stream\", stream => {\r\n          ref.current.srcObject = stream;\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <video style={{width: \"170px\"}} playsInline autoPlay ref={ref}></video>\r\n      // <StyledVideo playsInline autoPlay ref={ref} />\r\n  );\r\n}\r\n\r\nconst GamePage = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const {name} = useParams()\r\n  const username = localStorage.username\r\n  const roomDetail = useSelector(state => state.rooms.detail)\r\n  const loading = useSelector(state => state.rooms.loading)\r\n  const [turn, setTurn] = useState(false)\r\n  const [userID, setUserID] = useState(\"\");\r\n  const [audioMuted, setAudioMuted] = useState(false)\r\n  const [stream, setStream] = useState();\r\n\r\n  const [peers, setPeers] = useState([]);\r\n  const socketRef = useRef();\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const roomName = name;\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io.connect(\"http://localhost:4000\");\r\n    socketRef.current.on(\"yourID\", (id) => {\r\n      setUserID(id);\r\n    });\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        setStream(stream)\r\n        userVideo.current.srcObject = stream;\r\n        let id\r\n        socketRef.current.emit(\"inRoom\", ({roomName, id}));\r\n        socketRef.current.on(\"all users\", (users) => {\r\n          const peers = [];\r\n          users.forEach((userID) => {\r\n            const peer = createPeer(userID, socketRef.current.id, stream);\r\n            peersRef.current.push({\r\n              peerID: userID,\r\n              peer,\r\n            });\r\n            peers.push({\r\n              peerID: userID,\r\n              peer,\r\n            });\r\n          });\r\n          setPeers(peers);\r\n        });\r\n\r\n        socketRef.current.on(\"user joined\", (payload) => {\r\n          const peer = addPeer(payload.signal, payload.callerID, stream);\r\n          peersRef.current.push({\r\n            peerID: payload.callerID,\r\n            peer,\r\n          });\r\n\r\n          const peerObj = {\r\n            peer,\r\n            peerID: payload.callerID,\r\n          };\r\n\r\n          setPeers((users) => [...users, peerObj]);\r\n        });\r\n\r\n        socketRef.current.on(\"leave-room-client\", payload => {\r\n          setPeers(payload)\r\n          console.log(payload, \"leave room client\")\r\n        })\r\n\r\n        socketRef.current.on(\"receiving returned signal\", (payload) => {\r\n          const item = peersRef.current.find((p) => p.peerID === payload.id);\r\n          item.peer.signal(payload.signal);\r\n        });\r\n\r\n        socketRef.current.on(\"user-disconnected\", (id) => {\r\n          console.log(id, \"disconnected\")\r\n          const peerObj = peersRef.current.find((p) => p.peerID === id);\r\n          if (peerObj) {\r\n            peerObj.peer.destroy();\r\n          }\r\n          const peers = peersRef.current.filter((p) => p.peerID !== id);\r\n          peersRef.current = peers;\r\n          setPeers(peers);\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const createPeer = (userToSignal, callerID, stream) => {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socketRef.current.emit(\"sending signal\", {\r\n        userToSignal,\r\n        callerID,\r\n        signal,\r\n      });\r\n    });\r\n\r\n    return peer;\r\n  };\r\n\r\n  const addPeer = (inComingSignal, callerID, stream) => {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socketRef.current.emit(\"returning signal\", { signal, callerID });\r\n    });\r\n\r\n    peer.signal(inComingSignal);\r\n\r\n    return peer;\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(updateGameDetail())\r\n  }, [turn])\r\n\r\n  function clickHandler (i) {\r\n    const gameDetail = {...roomDetail.gameState}\r\n    const newState = makeMove(i)(gameDetail)\r\n    setTurn(!turn)\r\n    dispatch(gameStart(newState, name))\r\n  }\r\n\r\n  function HandleRematch () {\r\n    dispatch(readyToRematch(intialState, name))\r\n    // dispatch(gameStart(intialState, name))\r\n  }\r\n\r\n  const handleMoveRoom = () => {\r\n    let newUsers = peers.filter(peer => peer.peerID !== userID)\r\n    const payload = {\r\n      roomName,\r\n      newUsers\r\n    }\r\n    socketRef.current.emit(\"leave-room\", payload)\r\n    history.push(\"/room\")\r\n    // console.log(\"haloo\")\r\n  };\r\n\r\n  function toggleMuteAudio(){\r\n    if(stream){\r\n      setAudioMuted(!audioMuted)\r\n      stream.getAudioTracks()[0].enabled = audioMuted\r\n    }\r\n  }\r\n\r\n  let audioControl;\r\n  if(audioMuted){\r\n    audioControl=<span className=\"iconContainer\" onClick={()=>toggleMuteAudio()}>\r\n      <img style={{width: \"25px\", position: \"absolute\", left: 0, bottom: 7}} src={microphonestop} alt=\"Unmute audio\"/>\r\n    </span>\r\n  } else {\r\n    audioControl=<span className=\"iconContainer\" onClick={()=>toggleMuteAudio()}>\r\n      <img style={{width: \"25px\", position: \"absolute\", left: 0, bottom: 7}} src={microphone} alt=\"Mute audio\"/>\r\n    </span>\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <NavbarTop username={username}></NavbarTop>\r\n    <div className=\"App\" style={{\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      position: 'relative',\r\n      top: '4vh',\r\n      height: '80vh'\r\n    }}>\r\n      {\r\n        !loading ?\r\n        <h1>Loading</h1>\r\n        :\r\n        roomDetail.name && roomDetail.ready[0] === true && roomDetail.ready[1] === true  ?\r\n        <>\r\n        <StatusBar\r\n          player={roomDetail.gameState.player}\r\n          isOver={roomDetail.gameState.isOver}\r\n          message={roomDetail.gameState.message}\r\n        />\r\n        <div className=\"fullPageImage\">\r\n          <img src={fullPageImage} style={{\r\n            maxWidth: '1095px',\r\n            height: '90vh',\r\n            width: '200vw '\r\n          }}/>\r\n        </div>\r\n\r\n        <Board\r\n          board={roomDetail.gameState.board}\r\n          clickHandler={clickHandler}\r\n          roomDetail={roomDetail}\r\n        />\r\n        </>\r\n        :\r\n        <WaitingRoom></WaitingRoom>\r\n      }\r\n    </div>\r\n    <div style={{position: \"absolute\", zIndex: 100, top: \"-15px\", width: \"700px\", display: \"flex\", justifyContent: \"space-between\"}}>\r\n      <div>\r\n        <video style={{width: \"170px\", marginRight: \"300px\"}} muted ref={userVideo} autoPlay playsInline></video>\r\n        {audioControl}\r\n      </div>\r\n      {peers.map((peer) => {\r\n        if (peer.peerID !== userID) {\r\n          return <Video key={peer.peerID} peer={peer.peer} />;\r\n        }\r\n      })}\r\n    </div>\r\n      {\r\n        roomDetail.name && roomDetail.gameState.isOver == true ?\r\n        <div className=\"d-flex justify-content-center\">\r\n          <FinishAnnouncement handleRematch={HandleRematch} message={roomDetail.gameState.message}></FinishAnnouncement>\r\n        </div>\r\n        :\r\n        \"\"\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GamePage;","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\pages\\WaitingRoom.js",["167"],"import { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { leaveRoom, readyToPlay } from '../redux/actions'\r\nimport { CustomButton } from '../components'\r\nimport stars from '../assets/stars.gif'\r\nimport loadingnew from '../assets/loadingnew.gif'\r\n\r\nconst WaitingRoom = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const {name} = useParams()\r\n  const [ready, setReady] = useState(false)\r\n  const username = localStorage.username\r\n  const roomDetail = useSelector(state => state.rooms.detail)\r\n\r\n  const handleReady = (roomName) => {\r\n    setReady(true)\r\n    dispatch(readyToPlay(roomName))\r\n  }\r\n\r\n  const handlePlayerLeave = (roomName, username) => {\r\n    dispatch(leaveRoom(roomName, username))\r\n    history.push('/room')\r\n  }\r\n  return (    \r\n    <section style={{\r\n      backgroundColor: 'purple',\r\n      padding: '0px 20px',\r\n      backgroundImage: `url(${stars})`,\r\n      backgroundSize: '50%',\r\n      backgroundRepeat: 'repeat',\r\n      display: 'flex', justifyContent: 'center'\r\n    }}>\r\n    \r\n    <div className=\" row container d-flex flex-column justify-content-center align-items-center bg-warning text-light\" \r\n    style={{\r\n      borderRadius: '25px',\r\n      border: '8px solid black',\r\n      height: '30vh',\r\n      width: '70vh',\r\n      zIndex: '1'\r\n    }}>\r\n      {\r\n        !ready ?\r\n        <>\r\n        <h1 style={{color: 'black'}}><strong>REAADDYYY????</strong></h1>\r\n        {\r\n          roomDetail.name ? \r\n          <p style={{color: 'black'}}>{`${roomDetail.users.length}/2`}</p>\r\n          :\r\n          \"\"\r\n        }\r\n        <div className=\"container d-flex justify-content-center\">\r\n          <CustomButton onClick={() => handleReady(name)} className=\"btn- btn-dark mr-3 w-25\" style={{\r\n            border: '5px solid black',\r\n            borderRadius: '25px'\r\n            }}>GO</CustomButton>\r\n          <CustomButton onClick={() => handlePlayerLeave(name, username)} className=\"btn- btn-danger w-25\" style={{\r\n            border: '5px solid black',\r\n            borderRadius: '25px'\r\n            }}>Leave Room</CustomButton>\r\n        </div>\r\n        </>\r\n        :\r\n        <>\r\n        <div className='row justify-content-center'>\r\n          <h1 className='col-12' style={{color: 'black'}}><strong>WAITING FOR OTHER PLAYER</strong></h1>\r\n          <div className='col-12'>\r\n            <img src={loadingnew} className=\"loadingnew\" style={{\r\n              maxHeight: '100px',\r\n              marginTop: '-3vh',\r\n              marginBottom: '-2vh'\r\n            }}/>\r\n          </div>\r\n          <CustomButton \r\n            onClick={() => handlePlayerLeave(name, username)}\r\n            className=\"btn- btn-danger w-25\"\r\n            style={{\r\n              border: '5px solid black',\r\n              borderRadius: '25px'\r\n            }}\r\n          >Leave Room</CustomButton>\r\n        </div>\r\n        </>\r\n      }\r\n    </div>\r\n    </section>\r\n    \r\n  )\r\n}\r\n\r\nexport default WaitingRoom","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\utils.js",[],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\ModalLogin.js",[],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\RoomList.js",["168"],"import React, { useEffect } from 'react'\r\nimport InputField from './InputField'\r\nimport RoomCard from './RoomCard'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { updatedRoom } from '../redux/actions'\r\n\r\nconst RoomList = ({handleCreateRoom, rooms}) => {\r\n  const dispatch = useDispatch()\r\n  const username = localStorage.username\r\n  // let rooms = useSelector(state => state.rooms.data)\r\n  \r\n  useEffect(() => {\r\n    dispatch(updatedRoom())\r\n  }, [rooms])\r\n\r\n  return (\r\n<<<<<<< HEAD\r\n    <div className=\"container bg-dark h-100 d-inline-block p-3 text-white rounded\">\r\n      <div className=\"d-flex justify-content-center\">\r\n        <h3>Room List</h3>\r\n      </div>\r\n      <InputField rooms={rooms} section=\"create\" handleSubmit={handleCreateRoom}></InputField>\r\n      <div className=\"row d-flex align-items-center shadow-lg mt-5 mx-auto\" style={{maxHeight: '30vw', overflow: 'auto'}}>\r\n        <RoomCard username={username} rooms={rooms}></RoomCard>\r\n      </div>\r\n=======\r\n    <div className=\"container bg-dark h-100 d-inline-block p-3 text-white\" \r\n    style={{\r\n      borderRadius: '25px',\r\n      border: '6px solid'\r\n    }}>\r\n        <div className=\"d-flex justify-content-center\">\r\n            <h3>ROOM LIST</h3>\r\n        </div>\r\n        <InputField rooms={rooms} section=\"create\" handleSubmit={handleCreateRoom}></InputField>\r\n        <div className=\"row d-flex align-items-center shadow-lg mt-5 mx-auto\" style={{maxHeight: '30vw', overflow: 'auto'}}>\r\n            <RoomCard username={username} rooms={rooms}></RoomCard>\r\n        </div>\r\n>>>>>>> 54fa77739c0902ffd411af7ba4cd3986ee2c334a\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RoomList","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\JoinBox.js",[],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\Navbar.js",[],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\redux\\reducers\\index.js",[],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\redux\\actions\\index.js",[],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\inputField.js",[],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\RoomCard.js",[],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\Board.js",["169"],"import React, { useEffect, useState } from 'react'\r\nimport { BigHole, Hole } from '.'\r\n\r\nconst Board = ({ board, clickHandler, roomDetail }) => {    \r\n  const [localBoard, setLocalBoard] = useState(board)\r\n<<<<<<< HEAD\r\n=======\r\n  const [light, setLight] = useState([]) //array of index where holes have white background\r\n  const username = localStorage.username\r\n>>>>>>> 54fa77739c0902ffd411af7ba4cd3986ee2c334a\r\n  \r\n  useEffect(() => {\r\n    setLocalBoard(board)\r\n  }, [board])\r\n\r\n  const pebblesAdder = (clickedIndex, currentIndex) => {\r\n    if (clickedIndex < 6) {\r\n      setLocalBoard(localBoard => \r\n        localBoard.map((num, i) => {\r\n          if (i === currentIndex && i !== 13) return num + 1\r\n          return num\r\n        })\r\n      )\r\n    } else if (clickedIndex > 6) {\r\n      setLocalBoard(localBoard =>\r\n        localBoard.map((num, i) => {\r\n          if (i === currentIndex && i !== 6) {\r\n            return num + 1\r\n          }\r\n          return num\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  const lightController = (nextIndex, number) => {\r\n    const index = nextIndex - 1\r\n    const timeDelay = 300\r\n\r\n    const timeout = setInterval(() => {\r\n      if (number <= 0) {\r\n        clickHandler(index) //request to server\r\n        clearInterval(timeout)\r\n      } else if (number === 1) {\r\n        if (couldHijack(index, nextIndex)) {\r\n          const homeIndex = index < 6 ? 6 : 13\r\n          const hijackedIndex = 12 - nextIndex\r\n          setTimeout(() => {\r\n            hijacker(nextIndex, hijackedIndex, homeIndex)\r\n            number--\r\n<<<<<<< HEAD\r\n          }, timeDelay)\r\n=======\r\n          }, 500)\r\n>>>>>>> 54fa77739c0902ffd411af7ba4cd3986ee2c334a\r\n        } else {\r\n          setTimeout(() => {\r\n            pebblesAdder(index, nextIndex)\r\n            number--\r\n<<<<<<< HEAD\r\n          }, timeDelay)\r\n=======\r\n          }, 500)\r\n>>>>>>> 54fa77739c0902ffd411af7ba4cd3986ee2c334a\r\n        } \r\n      } else {\r\n        setTimeout(() => {\r\n          pebblesAdder(index, nextIndex)\r\n          number--\r\n          nextIndex++\r\n<<<<<<< HEAD\r\n        }, timeDelay)\r\n=======\r\n        }, 500)\r\n>>>>>>> 54fa77739c0902ffd411af7ba4cd3986ee2c334a\r\n      }\r\n      if (nextIndex === 14 ) nextIndex = 0\r\n    }, 1000)\r\n  }\r\n  \r\n  const couldHijack = (clickedIndex, lastIndex) => {\r\n   const allowedIndexToHijack = clickedIndex < 6\r\n      ? [7, 8, 9, 10, 11, 12]\r\n      : [0, 1, 2, 3, 4, 5]\r\n    // list of allowed index to hijack\r\n    if (!allowedIndexToHijack.includes(lastIndex) && !localBoard[lastIndex]) return true\r\n    return false\r\n  }\r\n\r\n  const hijacker = (nextIndex, hijackedIndex, homeIndex) => {\r\n    const currentPlayerNumber = localBoard[nextIndex]\r\n    const enemyNumber = localBoard[hijackedIndex]\r\n\r\n    setLocalBoard(localBoard => \r\n      localBoard.map((num, idx) => {\r\n        if (idx === hijackedIndex || idx === nextIndex) {\r\n          return 0\r\n        }\r\n        else if (idx == homeIndex) {\r\n          return localBoard[homeIndex] + currentPlayerNumber + enemyNumber\r\n        } else {\r\n          return num\r\n        }\r\n      })\r\n    )    \r\n  }\r\n\r\n  const boardClickHandler = (index, number) => {\r\n    setLocalBoard(localBoard => localBoard.map((num, i) => {\r\n      if (i === index) return 0\r\n      return num\r\n    }))\r\n    lightController(index + 1, number)\r\n  }\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      <BigHole\r\n        className=\"big-bowl\"\r\n        pebbles={localBoard[13]}\r\n        bgColor={\"#f58634\"}\r\n      />\r\n      <div>\r\n<<<<<<< HEAD\r\n        <div className=\"d-flex\">\r\n        {\r\n          localBoard.slice(7, 13).reverse().map((number, idx) => (\r\n            <Hole\r\n              bgColor=\"#f58634\"\r\n              pebbles={number}\r\n              key={\"player2\" + idx}\r\n              onClick={() => boardClickHandler(12-idx, number)}\r\n            />\r\n          ))\r\n        }\r\n        </div>\r\n        <div className=\"d-flex\">\r\n        {\r\n          localBoard.slice(0, 6).map((number, idx) => (\r\n            <Hole \r\n              bgColor={\"#eb596e\"}\r\n              pebbles={number}\r\n              key={\"player1\" + idx}\r\n              onClick={() => boardClickHandler(idx, number)}\r\n            />\r\n          ))\r\n        }\r\n        </div>\r\n=======\r\n        {\r\n          username === roomDetail.users[0] ?\r\n          <div className=\"d-flex\">\r\n            {\r\n              localBoard.slice(7, 13).reverse().map((number, idx) => (\r\n                <Hole\r\n                  bgColor={light.includes(12-idx) ? \"whitesmoke\" :\"#f58634\"}\r\n                  pebbles={number}\r\n                  key={\"player2\" + idx}\r\n                  // onClick={() => boardClickHandler(12-idx, number)}\r\n                />\r\n              ))\r\n            }\r\n          </div>\r\n          :\r\n          roomDetail.gameState.player === 1 ?\r\n          <div className=\"d-flex\">\r\n          {\r\n            localBoard.slice(7, 13).reverse().map((number, idx) => (\r\n              <Hole\r\n                bgColor={light.includes(12-idx) ? \"whitesmoke\" :\"#f58634\"}\r\n                pebbles={number}\r\n                key={\"player2\" + idx}\r\n                onClick={() => boardClickHandler(12-idx, number)}\r\n              />\r\n            ))\r\n          }\r\n          </div>\r\n          :\r\n          <div className=\"d-flex\">\r\n          {\r\n            localBoard.slice(7, 13).reverse().map((number, idx) => (\r\n              <Hole\r\n                bgColor={light.includes(12-idx) ? \"whitesmoke\" :\"#f58634\"}\r\n                pebbles={number}\r\n                key={\"player2\" + idx}\r\n                // onClick={() => boardClickHandler(12-idx, number)}\r\n              />\r\n            ))\r\n          }\r\n          </div>\r\n        }\r\n        {\r\n          username === roomDetail.users[1] ?\r\n            <div className=\"d-flex\">\r\n              {\r\n                localBoard.slice(0, 6).map((number, idx) => (\r\n                  <Hole \r\n                    bgColor={light.includes(idx) ? \"whitesmoke\" : \"#eb596e\"}\r\n                    pebbles={number}\r\n                    key={\"player1\" + idx}\r\n                    // onClick={() => boardClickHandler(idx, number)}\r\n                  />\r\n                ))\r\n              }\r\n            </div>\r\n            :\r\n            roomDetail.gameState.player === 0 ?\r\n            <div className=\"d-flex\">\r\n            {\r\n              localBoard.slice(0, 6).map((number, idx) => (\r\n                <Hole \r\n                  bgColor={light.includes(idx) ? \"whitesmoke\" : \"#eb596e\"}\r\n                  pebbles={number}\r\n                  key={\"player1\" + idx}\r\n                  onClick={() => boardClickHandler(idx, number)}\r\n                />\r\n              ))\r\n            }\r\n            </div>\r\n            :\r\n            <div className=\"d-flex\">\r\n            {\r\n              localBoard.slice(0, 6).map((number, idx) => (\r\n                <Hole \r\n                  bgColor={light.includes(idx) ? \"whitesmoke\" : \"#eb596e\"}\r\n                  pebbles={number}\r\n                  key={\"player1\" + idx}\r\n                  // onClick={() => boardClickHandler(idx, number)}\r\n                />\r\n              ))\r\n            }\r\n            </div>\r\n        }\r\n>>>>>>> 54fa77739c0902ffd411af7ba4cd3986ee2c334a\r\n      </div>\r\n      <BigHole\r\n        className=\"big-bowl\"\r\n        pebbles={localBoard[6]}\r\n        bgColor={\"#eb596e\"}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Board","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\redux\\reducers\\playersReducer.js",[],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\StatusBar.js",[],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\redux\\reducers\\roomReducer.js",[],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\InputField.js",[],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\FinishAnnouncement.js",["170","171"],"import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nconst FinishAnnouncement = ({message, handleRematch}) => {\r\n  const roomDetail = useSelector(state => state.rooms.detail)\r\n  useEffect(() => {\r\n    console.log(roomDetail)\r\n    if (roomDetail.gameState.message === 'Player 1 wins!') {\r\n      axios({\r\n      url: `/win`,\r\n      method: 'POST',\r\n      headers: {\r\n        username: roomDetail.users[0]\r\n      }\r\n    })\r\n      .then(res => {\r\n        return axios({\r\n          url: `/lose`,\r\n          method: 'POST',\r\n          headers: {\r\n            username: roomDetail.users[1]\r\n          }\r\n    })\r\n      .then((res) => {\r\n        console.log(res)\r\n    })\r\n      })\r\n      .catch(err => {\r\n        console.log(err, 'error di post win')\r\n      })\r\n    } else {\r\n      axios({\r\n      url: `/win`,\r\n      method: 'POST',\r\n      headers: {\r\n        username: roomDetail.users[1]\r\n      }\r\n    })\r\n      .then(res => {\r\n        return axios({\r\n          url: `/lose`,\r\n          method: 'POST',\r\n          headers: {\r\n            username: roomDetail.users[0]\r\n          }\r\n    })\r\n      .then((res) => {\r\n        console.log(res)\r\n    })\r\n      })\r\n      .catch(err => {\r\n        console.log(err, 'error di post win')\r\n      })\r\n    }\r\n  }, [])\r\n  return (\r\n    <div className=\"container rounded bg-dark text-white\" \r\n      style={{\r\n      top: '8vh',\r\n      position: 'absolute',\r\n      display: 'flex',\r\n      height: '60vh',\r\n      width: '60vw',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      zIndex: 100,\r\n      flexDirection: 'column'\r\n      }}>\r\n      <h1>{message}</h1>\r\n      <button onClick={handleRematch} >Rematch</button>\r\n      <Link to=\"/room\">\r\n        <button>Back to room</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FinishAnnouncement","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\index.js",[],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\BigHole.js",["172"],"import { Pebble } from '.'\r\nimport { motion, useAnimation } from 'framer-motion'\r\nimport { pebblesOrganizer } from '../helpers'\r\nimport { useEffect } from 'react'\r\n\r\nexport default function BigHole ({ bgColor = \"#f6f5f5\", pebbles = 0 }) {\r\n  const controls = useAnimation()\r\n  useEffect(() => {\r\n    controls.start({\r\n      backgroundColor: \"#f4f5db\", \r\n      transition: { duration: 0.4 }\r\n    })\r\n    setTimeout(() => {\r\n      controls.stop()\r\n      controls.start({ backgroundColor: bgColor })\r\n    }, 500)\r\n\r\n  }, [pebbles])\r\n\r\n  return (\r\n    <motion.div \r\n      className=\"big-bowl\"\r\n      initial={{backgroundColor: '#f4f5db'}}\r\n      animate={controls}\r\n    >\r\n      {\r\n       pebbles\r\n        ? [...Array(pebbles)].map((_, key) => (\r\n          <motion.div\r\n            animate={pebblesOrganizer(key, pebbles)}\r\n            key={key}\r\n          >\r\n            <Pebble\r\n              bgColor=\"#456990\"\r\n              isBigHole={true}\r\n            />\r\n          </motion.div>\r\n        ))\r\n        : null\r\n      }\r\n    </motion.div>\r\n  )\r\n}","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\Hole.js",["173"],"import { Pebble } from '.'\r\nimport { range } from 'lodash'\r\nimport { useEffect } from 'react'\r\nimport { motion, useAnimation } from 'framer-motion'\r\nimport { pebblesOrganizer } from '../helpers'\r\n\r\nconst button = {\r\n  rest: { scale: 1 },\r\n  hover: { scale: 1.3 },\r\n  pressed: { scale: 1.8 }\r\n};\r\n\r\nexport default function Hole ({ \r\n  bgColor = \"#f6f5f5\", \r\n  pebbles = 0, \r\n  onClick \r\n}) {\r\n  const controls = useAnimation()\r\n  useEffect(() => {\r\n    controls.start({\r\n      backgroundColor: \"#f4f5db\", \r\n      transition: { duration: 0.4 }\r\n    })\r\n    setTimeout(() => {\r\n      controls.stop()\r\n      controls.start({ backgroundColor: bgColor })\r\n    }, 500)\r\n\r\n  }, [pebbles])\r\n\r\n  return (\r\n    <motion.div \r\n      variants={button}\r\n      initial=\"rest\"\r\n      whileHover=\"hover\"\r\n      whileTap=\"pressed\"\r\n      onClick={onClick}\r\n    >\r\n      <motion.div \r\n        className=\"bowl\"\r\n        initial={{backgroundColor: \"#f4f5db\"}}\r\n        animate={controls}\r\n      >\r\n        {\r\n          pebbles\r\n          ? range(pebbles).map((_, idx) => (\r\n            <motion.div\r\n              animate={pebblesOrganizer(idx, pebbles)}\r\n              key={idx + \"hole\"}\r\n            >\r\n              <Pebble isBigHole={false}/>\r\n            </motion.div>\r\n          ))\r\n          : null\r\n        }\r\n      </motion.div>\r\n    </motion.div>\r\n  )\r\n}","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\Pebble.js",["174"],"import { useEffect } from 'react'\r\nimport { motion, usePresence } from 'framer-motion'\r\n\r\nexport default function Pebble ({ bgColor = \"black\", isBigHole }) {\r\n  const [ iamHere, removePebble ] = usePresence()\r\n  useEffect(() => {\r\n    !iamHere && setTimeout(removePebble, 400)\r\n  }, [iamHere])\r\n  return (\r\n    <motion.div \r\n      animate={{ \r\n        x: isBigHole ? 80 : 51,\r\n        y: isBigHole ? 90 : 51,\r\n        transition: {\r\n          duration: 0.55\r\n        }\r\n      }}\r\n      initial={{\r\n        x: 0,\r\n        y: 0\r\n      }}\r\n    >\r\n      <div className=\"pebble\" \r\n        style={{backgroundColor: bgColor}}\r\n      />\r\n    </motion.div>\r\n  )\r\n}","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\LeaderBoard.js",["175"],"import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { getLeaderBoard } from '../redux/actions'\r\nimport { Modal } from 'react-bootstrap'\r\n\r\nconst LeaderBoard = () => {\r\nconst dispatch = useDispatch()\r\nconst [show, setShow] = useState(false);\r\nconst handleClose = () => setShow(false);\r\nconst handleShow = () => setShow(true)\r\nconst leaderBoard = useSelector(state => state.rooms.leaderBoard)\r\n\r\nuseEffect(() => {\r\n  dispatch(getLeaderBoard())\r\n}, [show])\r\n\r\nreturn (\r\n<>\r\n  <div className=\"btn-leaderboard anchor-wrapper\" onClick={handleShow}>\r\n    <i className=\"fas fa-medal\"></i>\r\n    <span>leaderboard</span>\r\n  </div>\r\n\r\n  <Modal show={show} onHide={handleClose}>\r\n    <div className=\"leaderboard\">\r\n    <header>\r\n      <h1><strong>Leader Board</strong></h1>\r\n    </header>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th className=\"rank\"></th>\r\n          <th className=\"username\">Username</th>\r\n          <th className=\"match\">Match</th>\r\n          <th className=\"winrate\">Winrate</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      {\r\n        leaderBoard.map((data, index) => {\r\n          return (\r\n            <tr key={index + \"leaderboard\"}>\r\n              <td className=\"rank\">{index+1}</td>\r\n              <td className=\"username\">{data.username}</td>\r\n              <td className=\"match\">{data.matchCount}</td>\r\n              <td className=\"winrate\">{data.winRate}%</td>\r\n            </tr>\r\n          )\r\n        })\r\n      }\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  </Modal>\r\n</>\r\n)\r\n}\r\n\r\nexport default LeaderBoard","D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\helpers\\index.js",[],"D:\\Hendri\\h8\\p3\\dakonan\\dakonan-client\\src\\components\\Header.js",[],{"ruleId":"176","severity":1,"message":"177","line":3,"column":8,"nodeType":"178","messageId":"179","endLine":3,"endColumn":20},{"ruleId":"176","severity":1,"message":"180","line":4,"column":8,"nodeType":"178","messageId":"179","endLine":4,"endColumn":17},{"ruleId":"176","severity":1,"message":"181","line":7,"column":8,"nodeType":"178","messageId":"179","endLine":7,"endColumn":19},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":12,"column":7,"nodeType":"188","endLine":12,"endColumn":42},{"ruleId":"189","severity":1,"message":"190","line":15,"column":24,"nodeType":"188","endLine":15,"endColumn":36},{"ruleId":"186","severity":1,"message":"187","line":15,"column":36,"nodeType":"188","endLine":15,"endColumn":70},{"ruleId":"189","severity":1,"message":"190","line":17,"column":30,"nodeType":"188","endLine":17,"endColumn":42},{"ruleId":"189","severity":1,"message":"190","line":18,"column":30,"nodeType":"188","endLine":18,"endColumn":42},{"ruleId":"189","severity":1,"message":"190","line":19,"column":30,"nodeType":"188","endLine":19,"endColumn":42},{"ruleId":"186","severity":1,"message":"187","line":33,"column":11,"nodeType":"188","endLine":33,"endColumn":44},{"ruleId":"176","severity":1,"message":"191","line":2,"column":22,"nodeType":"178","messageId":"179","endLine":2,"endColumn":33},{"ruleId":null,"fatal":true,"severity":2,"message":"192","line":6,"column":8},{"ruleId":"176","severity":1,"message":"193","line":14,"column":7,"nodeType":"178","messageId":"179","endLine":14,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":32,"column":6,"nodeType":"196","endLine":32,"endColumn":8,"suggestions":"197"},{"ruleId":"194","severity":1,"message":"198","line":122,"column":6,"nodeType":"196","endLine":122,"endColumn":8,"suggestions":"199"},{"ruleId":"194","severity":1,"message":"200","line":160,"column":6,"nodeType":"196","endLine":160,"endColumn":12,"suggestions":"201"},{"ruleId":"176","severity":1,"message":"202","line":174,"column":9,"nodeType":"178","messageId":"179","endLine":174,"endColumn":23},{"ruleId":"203","severity":2,"message":"204","line":195,"column":83,"nodeType":"178","messageId":"205","endLine":195,"endColumn":97},{"ruleId":"203","severity":2,"message":"206","line":199,"column":83,"nodeType":"178","messageId":"205","endLine":199,"endColumn":93},{"ruleId":"186","severity":1,"message":"187","line":226,"column":11,"nodeType":"188","endLine":230,"endColumn":15},{"ruleId":"207","severity":1,"message":"208","line":248,"column":25,"nodeType":"209","messageId":"210","endLine":248,"endColumn":27},{"ruleId":"211","severity":1,"message":"212","line":255,"column":56,"nodeType":"213","messageId":"214","endLine":255,"endColumn":58},{"ruleId":"186","severity":1,"message":"187","line":70,"column":13,"nodeType":"188","endLine":74,"endColumn":17},{"ruleId":"194","severity":1,"message":"200","line":14,"column":6,"nodeType":"196","endLine":14,"endColumn":13,"suggestions":"215"},{"ruleId":"211","severity":1,"message":"212","line":82,"column":22,"nodeType":"213","messageId":"214","endLine":82,"endColumn":24},{"ruleId":"176","severity":1,"message":"216","line":1,"column":16,"nodeType":"178","messageId":"179","endLine":1,"endColumn":24},{"ruleId":"194","severity":1,"message":"217","line":56,"column":6,"nodeType":"196","endLine":56,"endColumn":8,"suggestions":"218"},{"ruleId":"194","severity":1,"message":"219","line":18,"column":6,"nodeType":"196","endLine":18,"endColumn":15,"suggestions":"220"},{"ruleId":"194","severity":1,"message":"219","line":29,"column":6,"nodeType":"196","endLine":29,"endColumn":15,"suggestions":"221"},{"ruleId":"194","severity":1,"message":"222","line":8,"column":6,"nodeType":"196","endLine":8,"endColumn":15,"suggestions":"223"},{"ruleId":"194","severity":1,"message":"200","line":15,"column":4,"nodeType":"196","endLine":15,"endColumn":10,"suggestions":"224"},"no-unused-vars","'RegisterPage' is defined but never used.","Identifier","unusedVar","'LoginPage' is defined but never used.","'WaitingRoom' is defined but never used.","no-native-reassign",["225"],"no-negated-in-lhs",["226"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useSelector' is defined but never used.","Parsing error: Identifier 'NavbarTop' has already been declared\n\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[36mimport\u001b[39m { \u001b[33mRoomList\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJoinBox\u001b[39m\u001b[33m,\u001b[39m \u001b[33mNavbarTop\u001b[39m } from \u001b[32m'../components'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 | \u001b[39m\u001b[36mimport\u001b[39m { useHistory } from \u001b[32m'react-router-dom'\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mNavbarTop\u001b[39m from \u001b[32m'../components/Navbar'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mSwal\u001b[39m from \u001b[32m'sweetalert2'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 | \u001b[39m\u001b[36mimport\u001b[39m { updatedRoom } from \u001b[32m'../redux/actions'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 9 | \u001b[39m\u001b[36mimport\u001b[39m dakonan from \u001b[32m'../assets/dakonan.png'\u001b[39m\u001b[0m","'socket' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.","ArrayExpression",["227"],"React Hook useEffect has a missing dependency: 'roomName'. Either include it or remove the dependency array.",["228"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["229"],"'handleMoveRoom' is assigned a value but never used.","no-undef","'microphonestop' is not defined.","undef","'microphone' is not defined.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["230"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'roomDetail'. Either include it or remove the dependency array.",["231"],"React Hook useEffect has missing dependencies: 'bgColor' and 'controls'. Either include them or remove the dependency array.",["232"],["233"],"React Hook useEffect has a missing dependency: 'removePebble'. Either include it or remove the dependency array.",["234"],["235"],"no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"246","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},"Update the dependencies array to be: [props.peer]",{"range":"253","text":"254"},"Update the dependencies array to be: [roomName]",{"range":"255","text":"256"},"Update the dependencies array to be: [dispatch, turn]",{"range":"257","text":"258"},"Update the dependencies array to be: [dispatch, rooms]",{"range":"259","text":"260"},"Update the dependencies array to be: [roomDetail]",{"range":"261","text":"262"},"Update the dependencies array to be: [bgColor, controls, pebbles]",{"range":"263","text":"264"},{"range":"265","text":"264"},"Update the dependencies array to be: [iamHere, removePebble]",{"range":"266","text":"267"},"Update the dependencies array to be: [dispatch, show]",{"range":"268","text":"269"},[1033,1035],"[props.peer]",[3926,3928],"[roomName]",[4695,4701],"[dispatch, turn]",[453,460],"[dispatch, rooms]",[1348,1350],"[roomDetail]",[518,527],"[bgColor, controls, pebbles]",[670,679],[283,292],"[iamHere, removePebble]",[501,507],"[dispatch, show]"]