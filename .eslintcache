[{"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/index.js":"1","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/reportWebVitals.js":"2","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/App.js":"3","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/redux/store/index.js":"4","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/pages/LoginPage.js":"5","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/pages/MainPage.js":"6","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/pages/WaitingRoom.js":"7","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/pages/Room.js":"8","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/pages/RegisterPage.js":"9","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/pages/GamePage.js":"10","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/HowToPlay.js":"11","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/utils.js":"12","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/WebRTC.js":"13","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/FinishAnnouncement.js":"14","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/redux/actions/index.js":"15","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/index.js":"16","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/redux/reducers/index.js":"17","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/ModalLogin.js":"18","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/Navbar.js":"19","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/BigHole.js":"20","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/Hole.js":"21","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/CustomButton.js":"22","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/Pebble.js":"23","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/AnchorWrapper.js":"24","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/LeaderBoard.js":"25","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/StatusBar.js":"26","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/Board.js":"27","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/inputField.js":"28","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/JoinBox.js":"29","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/RoomCard.js":"30","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/RoomList.js":"31","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/redux/reducers/playersReducer.js":"32","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/redux/reducers/roomReducer.js":"33","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/JoinCard.js":"34","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/pages/index.js":"35","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/helpers/index.js":"36","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/config.js":"37"},{"size":722,"mtime":1611760149688,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":1611270026721,"results":"40","hashOfConfig":"39"},{"size":813,"mtime":1611580633492,"results":"41","hashOfConfig":"39"},{"size":217,"mtime":1611278794938,"results":"42","hashOfConfig":"39"},{"size":2255,"mtime":1611732021628,"results":"43","hashOfConfig":"39"},{"size":1401,"mtime":1611736977606,"results":"44","hashOfConfig":"39"},{"size":2893,"mtime":1611711470340,"results":"45","hashOfConfig":"39"},{"size":2812,"mtime":1611752029116,"results":"46","hashOfConfig":"39"},{"size":3313,"mtime":1611752029068,"results":"47","hashOfConfig":"39"},{"size":8718,"mtime":1611792955939,"results":"48","hashOfConfig":"39"},{"size":3992,"mtime":1611760149632,"results":"49","hashOfConfig":"39"},{"size":4389,"mtime":1611653057224,"results":"50","hashOfConfig":"39"},{"size":5523,"mtime":1611759406073,"results":"51","hashOfConfig":"39"},{"size":4643,"mtime":1611761875959,"results":"52","hashOfConfig":"39"},{"size":3677,"mtime":1611760149688,"results":"53","hashOfConfig":"39"},{"size":748,"mtime":1611760458934,"results":"54","hashOfConfig":"39"},{"size":248,"mtime":1611280663054,"results":"55","hashOfConfig":"39"},{"size":1414,"mtime":1611760149636,"results":"56","hashOfConfig":"39"},{"size":1198,"mtime":1611734854443,"results":"57","hashOfConfig":"39"},{"size":1003,"mtime":1611732021404,"results":"58","hashOfConfig":"39"},{"size":1326,"mtime":1611793415337,"results":"59","hashOfConfig":"39"},{"size":461,"mtime":1611732021416,"results":"60","hashOfConfig":"39"},{"size":628,"mtime":1611732021480,"results":"61","hashOfConfig":"39"},{"size":537,"mtime":1611732021404,"results":"62","hashOfConfig":"39"},{"size":1538,"mtime":1611732021416,"results":"63","hashOfConfig":"39"},{"size":1229,"mtime":1611793424970,"results":"64","hashOfConfig":"39"},{"size":4103,"mtime":1611752028848,"results":"65","hashOfConfig":"39"},{"size":1024,"mtime":1611752028988,"results":"66","hashOfConfig":"39"},{"size":1187,"mtime":1611752028908,"results":"67","hashOfConfig":"39"},{"size":2884,"mtime":1611752028960,"results":"68","hashOfConfig":"39"},{"size":1116,"mtime":1611752028976,"results":"69","hashOfConfig":"39"},{"size":394,"mtime":1611277950210,"results":"70","hashOfConfig":"39"},{"size":700,"mtime":1611657322507,"results":"71","hashOfConfig":"39"},{"size":2611,"mtime":1611752028960,"results":"72","hashOfConfig":"39"},{"size":299,"mtime":1611732021696,"results":"73","hashOfConfig":"39"},{"size":1280,"mtime":1611732021592,"results":"74","hashOfConfig":"39"},{"size":130,"mtime":1611760149676,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1wkhp43",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"78"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/index.js",[],["167","168"],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/reportWebVitals.js",[],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/App.js",["169","170","171"],"import {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport MainPage from './pages/MainPage'\nimport RegisterPage from './pages/RegisterPage'\nimport LoginPage from './pages/LoginPage'\nimport Room from './pages/Room'\nimport GamePage from './pages/GamePage'\nimport WaitingRoom from './pages/WaitingRoom'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainPage></MainPage>\n        </Route>\n        <Route path=\"/room\">\n          <Room></Room>\n        </Route>\n        <Route exact path=\"/game/:name\">\n          <GamePage></GamePage>\n        </Route>\n        <Route path=\"*\">\n          <MainPage></MainPage>\n        </Route>\n      </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/redux/store/index.js",[],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/pages/LoginPage.js",[],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/pages/MainPage.js",["172","173","174","175","176","177"],"import React from 'react'\nimport { ModalLogin, AnchorWrapper } from '../components'\nimport { motion } from 'framer-motion'\nimport man from '../assets/man.png'\nimport logo from '../assets/logo.png'\nimport fire from '../assets/fire.gif'\nimport HowToPlay from '../components/HowToPlay'\n\n\nconst MainPage = () => {\n  return (\n  <>\n    <section>\n      <img src={fire} className=\"fire\" />\n      <div className=\"circle\"></div>\n      <header className='headerMainPage'>\n        <a href=\"#\"><img src={logo} className=\"logo\"/></a>\n        <ul>\n          <li><AnchorWrapper><a href=\"#\">\n            <HowToPlay></HowToPlay>\n            </a></AnchorWrapper></li>\n          <li><AnchorWrapper><a href=\"#\">Leader Board</a></AnchorWrapper></li>\n        </ul>\n      </header>\n      <div className=\"content\">\n        <motion.div\n          variants={{\n            hover: { scale: 1.1 }\n          }}\n          whileHover=\"hover\"\n          className=\"textBox\"\n        >\n          <h2>Bukan dakon biasa.<br/>Tapi <span>DAKONAN</span></h2>\n          <p>Dakonan adalah board game digital yang cara mainnya terinspirasi dari permainan tradisional nusantara seperti congklak, dakon, dan mancala.</p>\n          <ModalLogin></ModalLogin>\n        </motion.div>\n        <div className=\"imgBox\">\n            <img src={man} className=\"man\" />\n        </div>            \n      </div>\n    </section>\n  </>\n  )\n}\n\nexport default MainPage","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/pages/WaitingRoom.js",["178"],"import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { leaveRoom, readyToPlay } from '../redux/actions'\nimport stars from '../assets/stars.gif'\nimport loadingnew from '../assets/loadingnew.gif'\n\nconst WaitingRoom = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const {name} = useParams()\n  const [ready, setReady] = useState(false)\n  const username = localStorage.username\n  const roomDetail = useSelector(state => state.rooms.detail)\n\n  const handleReady = (roomName) => {\n    setReady(true)\n    dispatch(readyToPlay(roomName))\n  }\n\n  const handlePlayerLeave = (roomName, username) => {\n    dispatch(leaveRoom(roomName, username))\n    history.push('/room')\n  }\n  return (\n    \n    <section style={{\n      backgroundColor: 'purple',\n      padding: '0px 20px',\n      backgroundImage: `url(${stars})`,\n      backgroundSize: '50%',\n      backgroundRepeat: 'repeat',\n      display: 'flex', justifyContent: 'center'\n    }}>\n    \n    <div className=\" row container d-flex flex-column justify-content-center align-items-center bg-warning text-light\" \n    style={{\n      borderRadius: '25px',\n      border: '8px solid black',\n      height: '30vh',\n      width: '70vh',\n      zIndex: '1'\n    }}>\n      {\n        !ready ?\n        <>\n        <h1 style={{color: 'black'}}><strong>REAADDYYY????</strong></h1>\n        {\n          roomDetail.name ? \n          <p style={{color: 'black'}}>{`${roomDetail.users.length}/2`}</p>\n          :\n          \"\"\n        }\n        <div className=\"container d-flex justify-content-center\">\n          <button onClick={() => handleReady(name)} className=\"btn- btn-dark mr-3 w-25\" style={{\n            border: '5px solid black',\n            borderRadius: '25px'\n            }}>GO</button>\n          <button onClick={() => handlePlayerLeave(name, username)} className=\"btn- btn-danger w-25\" style={{\n            border: '5px solid black',\n            borderRadius: '25px'\n            }}>Leave Room</button>\n        </div>\n        </>\n        :\n        <>\n        <div className='row justify-content-center'>\n        <h1 className='col-12' style={{color: 'black'}}><strong>WAITING FOR OTHER PLAYER</strong></h1>\n        <div className='col-12'>\n          <img src={loadingnew} className=\"loadingnew\" style={{\n            maxHeight: '100px',\n            marginTop: '-3vh',\n            marginBottom: '-2vh'\n          }}/>\n        </div>\n        <button onClick={() => handlePlayerLeave(name, username)} className=\"btn- btn-danger w-25\" style={{\n          border: '5px solid black',\n          borderRadius: '25px'\n        }}>Leave Room</button>\n        </div>\n        </>\n      }\n      {/* <p>{JSON.stringify(roomDetail)}</p> */}\n    </div>\n      {/* <img src={manhead} class=\"manhead\" /> */}\n    </section>\n    \n  )\n}\n\nexport default WaitingRoom","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/pages/Room.js",["179","180","181"],"import React, { useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { createRoom, updateRoom } from '../redux/actions'\nimport { RoomList, JoinBox, NavbarTop} from '../components'\nimport { useHistory } from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport { updatedRoom } from '../redux/actions'\nimport dakonan from '../assets/dakonan.png'\nimport stars from '../assets/stars.gif'\n\nconst Room = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const username = localStorage.username\n  let rooms = useSelector(state => state.rooms.data)\n  \n  useEffect(() => {\n    console.log(rooms, 'di room page')\n    dispatch(updatedRoom())\n  }, [rooms])\n\n  useEffect(() => {\n      dispatch(updateRoom())\n  },[dispatch])\n\n  useEffect(() => {\n    let isLoggedIn = localStorage.access_token\n    if(!isLoggedIn) {\n      history.push('/')\n    }\n  }, [])\n\n  const handleCreateRoom = (roomName) => {\n    let isAlreadyUsed\n    isAlreadyUsed = rooms.findIndex(room => {\n      return room.name === roomName\n    })\n    if(isAlreadyUsed === -1 || !roomName) {\n      let payload = {\n        roomName,\n        username\n      }\n      dispatch(createRoom(payload))\n      history.push(`/game/${roomName}`)\n    } else {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'Room Name Already Used'\n      })\n    }\n\n  }\n    \n  return (\n    <>\n      <section style={{\n        backgroundColor: '#118ab2',\n        padding: '0px 20px',\n        backgroundImage: `url(${stars})`,\n        backgroundSize: '50%',\n        backgroundRepeat: 'repeat',\n        display: 'flex', justifyContent: 'space-between'\n      }}>\n      \n      <NavbarTop username={username}></NavbarTop>\n      \n\n      <div className=\"col-12\">\n        <div className=\"row room-body justify-content-center\"\n        style={{\n          // backgroundColor: 'red',\n        }}\n        >\n          {/* <div className='col-1' style={{backgroundColor: 'red'}}></div> */}\n          <div className=\"row col-10 justify-content-center\">\n            <div className=\"col-12\">\n              {/* <img src={dakonan} class=\"dakonan\" style={{\n                maxWidth: '180px',\n                paddingBottom: '20px',\n                // paddingTop: '20px',\n                filter: 'drop-shadow(2px 2px 0 black) drop-shadow(-2px 2px 0 black)'\n              }}/> */}\n            </div>\n              <div className='col-lg-5 col-sm-12'>\n                <JoinBox></JoinBox>\n              </div>\n            <div className=\"col-lg-7 col-sm-12\">\n              <RoomList rooms={rooms} handleCreateRoom={handleCreateRoom}></RoomList>\n          </div>\n        </div>\n        {/* <div className='col-1' style={{backgroundColor: 'red'}}></div> */}\n        </div>\n      </div>\n      </section>\n    </>\n  )\n}\nexport default Room","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/pages/RegisterPage.js",["182"],"import { useState } from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { CustomButton } from '../components'\nimport { register } from '../redux/actions'\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch()\n  const [formInput, setFormInput] = useState({\n    email: '',\n    username: '',\n    password: ''\n  })\n\n  const [errors, setErrors] = useState({\n    email: false,\n    username: false,\n    password: false\n  })\n\n  const handleChange = (e) => {\n    const name = e.target.name\n    const value = e.target.value\n    const obj = {...formInput}\n    obj[name] = value\n    setFormInput(obj)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    let errorsMessage = false\n    let newError = {\n      email: false,\n      username: false,\n      password: false,\n  }\n\n    if(formInput.email.length === 0 || formInput.email.trim().length === 0) {\n      errorsMessage = true\n      newError.email = 'email is required and valid email'\n    }\n    if(!formInput.username.length === 0 || formInput.username.trim().length === 0) {\n      errorsMessage = true\n      newError.username = 'username is required'\n    }\n    if(formInput.password.length < 6 || formInput.password.trim().length < 6) {\n      errorsMessage = true\n      newError.password = 'password is required and minimum 6 character'\n    }    \n    if(errorsMessage) {\n      errorsMessage = false\n      setErrors(newError)\n    }\n\n    if (formInput.email && formInput.username && formInput.password.length >= 6) {\n      const payload = {\n        email: formInput.email,\n        username: formInput.username,\n        password: formInput.password\n      }\n      dispatch(register(payload))\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"container\">\n        <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label >Email</label>\n          <input name=\"email\" onChange={handleChange} type=\"email\" className=\"form-control\" placeholder=\"Enter Your Username\"/>\n          {\n            errors.email ?\n            <div className=\"error-email\">\n              <span>{errors.email}</span>\n            </div>\n            : null\n          }\n          </div>\n            <div className=\"form-group\">\n              <label >USERNAME</label>\n              <input name=\"username\" onChange={handleChange} type=\"text\" className=\"form-control\" placeholder=\"Enter Your Username\"/>\n              {\n                errors.username ?\n                <div className=\"error-username\">\n                  <span>{errors.username}</span>\n                </div>\n                : null\n              }\n            </div>\n            <div className=\"form-group\">\n              <label >PASSWORD</label>\n              <input name=\"password\" onChange={handleChange} type=\"password\" className=\"form-control\" placeholder=\"Enter Your Username\"/>\n              {\n                errors.password ?\n                <div className=\"error-password\">\n                  <span>{errors.password}</span>\n                </div>\n                : null\n              }\n            </div>\n            <div className=\"form-group\">\n              <CustomButton className=\"btn btn-dark mt-2\" type=\"submit\">\n                Register\n              </CustomButton>\n            </div>\n        </form>\n      </div>\n    </div>\n  )\n\n}\n\nexport default RegisterPage","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/pages/GamePage.js",["183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203"],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/HowToPlay.js",["204"],"import { useState } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport logo from '../assets/logo.png'\n\nconst HowToPlay = () => {\nconst [show, setShow] = useState(false);\nconst handleClose = () => setShow(false);\nconst handleShow = () => setShow(true)\n\n\nreturn (\n<>\n  <div className=\"anchor-wrapper\" onClick={handleShow}>\n    <h5>How To Play</h5>\n  </div>\n\n  <Modal show={show} onHide={handleClose}>\n  <div class=\"howtoplay row\" style={{textAlign: 'center'}}>\n    <div className=\"col-12 mt-4\">\n      <div className=\"col-12 mb-3\">\n        <img src={logo} className=\"logo\" style={{width: '3rem'}}/>\n      </div>\n      <div className=\"col-12\" >\n        <h1 className=\"mb-4\" style={{color: '#e9c46a', webkitTextStroke: '1.5px black', fontSize: '70px'}}><strong>How to Play</strong></h1>\n        <h4 style={{color: '#e9c46a', webkitTextStroke: '1px black', fontSize: '30px'}}><strong>For 2 Players</strong></h4>\n        <p className=\"mb-4\">Dakon (also known as Dhakon, Cangklok, Mancala, etc) is an ancient family of board games, and there are numerous variants.</p>\n        <h4 style={{color: '#e9c46a', webkitTextStroke: '1px black', fontSize: '30px'}}><strong>Gameplay</strong></h4>\n        <table className=\"mb-5\">\n          <tbody>\n            <tr className=\"odd\">\n              <td style={{textAlign: 'left', minWidth: '2em'}} >1</td>\n              <td style={{textAlign: 'left'}} className=\"username\">The game begins with one player picking up all of the pieces in any one of the pockets on his/her side.</td>\n            </tr>\n            <tr className=\"even\">\n              <td style={{textAlign: 'left', minWidth: '2em'}} >2</td>\n              <td style={{textAlign: 'left'}} className=\"username\">Moving counter-clockwise, the player deposits one of the stones in each pocket until the stones run out.</td>\n            </tr>\n            <tr className=\"odd\">\n              <td style={{textAlign: 'left', minWidth: '2em'}}>3</td>\n              <td style={{textAlign: 'left'}} className=\"username\">If you run into your own Dakon (store), deposit one piece in it. If you run into your opponent's Dakon, skip it and continue moving to the next pocket.</td>\n            </tr>\n            <tr className=\"even\">\n              <td style={{textAlign: 'left', minWidth: '2em'}} >4</td>\n              <td style={{textAlign: 'left'}} className=\"username\">If the last piece you drop is in your own Dakon, you take another turn.</td>\n            </tr>\n            <tr className=\"odd\">\n              <td style={{textAlign: 'left', minWidth: '2em'}}>5</td>\n              <td style={{textAlign: 'left'}} className=\"username\">If the last piece you drop is in an empty pocket on your side, you capture that piece and any pieces in the pocket directly opposite.</td>\n            </tr>\n            <tr className=\"even\">\n              <td style={{textAlign: 'left', minWidth: '2em'}} >6</td>\n              <td style={{textAlign: 'left'}} className=\"username\">Always place all captured pieces in your Dakon (store).</td>\n            </tr>\n            <tr className=\"odd\">\n              <td style={{textAlign: 'left', minWidth: '2em'}}>7</td>\n              <td style={{textAlign: 'left'}} className=\"username\">The game ends when all six pockets on one side of the Dakon board are empty.</td>\n            </tr>\n            <tr className=\"even\">\n              <td style={{textAlign: 'left', minWidth: '2em'}} >8</td>\n              <td style={{textAlign: 'left'}} className=\"username\">The player who still has pieces on his/her side of the board when the game ends capture all of those pieces.</td>\n            </tr>\n            <tr className=\"odd\">\n              <td style={{textAlign: 'left', minWidth: '2em'}}>9</td>\n              <td style={{textAlign: 'left'}} className=\"username\">Count all the pieces in each Dakon. The winner is the player with the most pieces.</td>\n            </tr>\n\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  </Modal>\n</>\n)\n}\n\nexport default HowToPlay","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/utils.js",[],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/WebRTC.js",["205","206","207","208","209","210"],"import React, {useEffect,useRef, useState} from 'react'\nimport io from 'socket.io-client'\nimport Peer from \"simple-peer\";\nimport microphone from '../Icons/microphone.svg'\nimport microphonestop from '../Icons/microphone-stop.svg'\nimport { useHistory, useParams } from 'react-router-dom';\n\n\nconst socket = io('https://dakonan-server.herokuapp.com')\n// const socket = io('http://localhost:4000')\n\nconst Video = (props) => {\n  const ref = useRef();\n  const username = localStorage.username\n\n  useEffect(() => {\n      props.peer.on(\"stream\", stream => {\n          ref.current.srcObject = stream;\n      })\n  }, []);\n\n  return (\n      <video playsInline autoPlay ref={ref}></video>\n      // <StyledVideo playsInline autoPlay ref={ref} />\n  );\n}\n\n\nconst VideoCall = () => {\n  const {name} = useParams()\n  const history = useHistory()\n  const [userID, setUserID] = useState(\"\");\n  const [audioMuted, setAudioMuted] = useState(false)\n  const [stream, setStream] = useState();\n\n  const [peers, setPeers] = useState([]);\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const roomName = name;\n  useEffect(() => {\n      socketRef.current = io.connect(\"https://dakonan-server.herokuapp.com\");\n      socketRef.current.on(\"yourID\", (id) => {\n        setUserID(id);\n      });\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: true })\n        .then((stream) => {\n          setStream(stream)\n          userVideo.current.srcObject = stream;\n          let id\n          socketRef.current.emit(\"inRoom\", ({roomName, id}));\n          socketRef.current.on(\"all users\", (users) => {\n            const peers = [];\n            users.forEach((userID) => {\n              const peer = createPeer(userID, socketRef.current.id, stream);\n              peersRef.current.push({\n                peerID: userID,\n                peer,\n              });\n              peers.push({\n                peerID: userID,\n                peer,\n              });\n            });\n            setPeers(peers);\n          });\n  \n          socketRef.current.on(\"user joined\", (payload) => {\n            const peer = addPeer(payload.signal, payload.callerID, stream);\n            peersRef.current.push({\n              peerID: payload.callerID,\n              peer,\n            });\n  \n            const peerObj = {\n              peer,\n              peerID: payload.callerID,\n            };\n  \n            setPeers((users) => [...users, peerObj]);\n          });\n  \n          socketRef.current.on(\"leave-room-client\", payload => {\n            setPeers(payload)\n            console.log(payload, \"leave room client\")\n          })\n  \n          socketRef.current.on(\"receiving returned signal\", (payload) => {\n            const item = peersRef.current.find((p) => p.peerID === payload.id);\n            item.peer.signal(payload.signal);\n          });\n  \n          socketRef.current.on(\"user-disconnected\", (id) => {\n            const peerObj = peersRef.current.find((p) => p.peerID === id);\n            if (peerObj) {\n              peerObj.peer.destroy();\n            }\n            const peers = peersRef.current.filter((p) => p.peerID !== id);\n            peersRef.current = peers;\n            setPeers(peers);\n          });\n        });\n    }, []);\n  \n    const createPeer = (userToSignal, callerID, stream) => {\n      const peer = new Peer({\n        initiator: true,\n        trickle: false,\n        config: {\n          iceServers: [\n          { url: 'stun:stun.l.google.com:19302' },\n          { url: 'turn:numb.viagenie.ca', credential: 'muazkh', username: 'webrtc@live.com' }\n        ]},\n        stream\n      });\n  \n      peer.on(\"signal\", (signal) => {\n        socketRef.current.emit(\"sending signal\", {\n          userToSignal,\n          callerID,\n          signal,\n        });\n      });\n  \n      return peer;\n    };\n  \n    const addPeer = (inComingSignal, callerID, stream) => {\n      const peer = new Peer({\n        initiator: false,\n        trickle: false,\n        stream\n      });\n  \n      peer.on(\"signal\", (signal) => {\n        socketRef.current.emit(\"returning signal\", { signal, callerID });\n      });\n  \n      peer.signal(inComingSignal);\n  \n      return peer;\n    };\n    const handleMoveRoom = () => {\n      let newUsers = peers.filter(peer => peer.peerID !== userID)\n      const payload = {\n        roomName,\n        newUsers\n      }\n      socketRef.current.emit(\"leave-room\", payload)\n      history.push(\"/room\")\n      // console.log(\"haloo\")\n    };\n  \n    function toggleMuteAudio(){\n      if(stream){\n        setAudioMuted(!audioMuted)\n        stream.getAudioTracks()[0].enabled = audioMuted\n      }\n    }\n  \n    let audioControl;\n    if(audioMuted){\n      audioControl=<span className=\"iconContainer\" onClick={()=>toggleMuteAudio()}>\n        <img style={{width: \"25px\", position: \"absolute\", left: 0, bottom: 7}} src={microphonestop} alt=\"Unmute audio\"/>\n      </span>\n    } else {\n      audioControl=<span className=\"iconContainer\" onClick={()=>toggleMuteAudio()}>\n        <img style={{width: \"25px\", position: \"absolute\", left: 0, bottom: 7}} src={microphone} alt=\"Mute audio\"/>\n      </span>\n    }\n\n    return (\n      <>\n      <div className=\"vid-player\">\n        <video muted ref={userVideo} autoPlay playsInline></video>\n        {audioControl}\n      </div>\n      <div className=\"vid-enemy\">\n      {peers.map((peer) => {\n        if (peer.peerID !== userID) {\n          return <Video key={peer.peerID} peer={peer.peer} />;\n        }\n      })}\n      </div>\n    </>\n    )\n}\n\nexport default VideoCall\n","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/FinishAnnouncement.js",["211","212","213"],"import { useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {Link, useHistory, useParams } from 'react-router-dom'\nimport { leaveRoom } from '../redux/actions/index'\nimport axios from 'axios'\nimport bluefire from '../assets/bluefire.gif'\nimport Swal from 'sweetalert2'\nimport winGif from '../assets/win.gif'\nimport loseGif from '../assets/lose.gif'\n\nconst FinishAnnouncement = ({message, handleRematch}) => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const roomDetail = useSelector(state => state.rooms.detail)\n  const loginUser = localStorage.getItem('username')\n  const {name} = useParams()\n\n  useEffect(() => {\n    if (roomDetail.gameState.message === 'Player 1 wins!') {\n      if (loginUser === roomDetail.users[0]) {\n        axios({\n        url: `/win`,\n        method: 'POST',\n        headers: {\n          username: roomDetail.users[0]\n        }\n      })\n        .then((res) => {\n          Swal.fire({\n            title: 'Congrats!',\n            text: `You win this game, ${loginUser}!`,\n            imageUrl: winGif,\n            imageWidth: 400,\n            imageHeight: 250,\n            imageAlt: 'Custom image',\n          })\n        })\n        .catch((err) => {\n          console.log(err, 'error post win')\n        })\n      } else if (loginUser === roomDetail.users[1]) {\n        axios({\n        url: `/lose`,\n        method: 'POST',\n        headers: {\n          username: roomDetail.users[1]\n        }\n      })\n        .then((res) => {\n          Swal.fire({\n            title: 'Ouch!',\n            text: `You lose this game, come back stronger, ${loginUser}!`,\n            imageUrl: loseGif,\n            imageWidth: 400,\n            imageHeight: 250,\n            imageAlt: 'Custom image',\n          })\n        })\n        .catch((err) => {\n          console.log(err, 'error post lose')\n        })\n      }\n    } else if (roomDetail.gameState.message === 'Player 2 wins!') {\n      if (loginUser === roomDetail.users[1]) {\n        axios({\n        url: `/win`,\n        method: 'POST',\n        headers: {\n          username: roomDetail.users[1]\n        }\n      })\n        .then((res) => {\n          Swal.fire({\n            title: 'Congrats!',\n            text: `You win this game, ${loginUser}!`,\n            imageUrl: winGif,\n            imageWidth: 400,\n            imageHeight: 250,\n            imageAlt: 'Custom image',\n          })\n        })\n        .catch((err) => {\n          console.log(err, 'error post win')\n        })\n      } else if (loginUser === roomDetail.users[0]) {\n        axios({\n        url: `/lose`,\n        method: 'POST',\n        headers: {\n          username: roomDetail.users[0]\n        }\n      })\n        .then((res) => {\n          Swal.fire({\n            title: 'Ouch!',\n            text: `You lose this game, come back stronger, ${loginUser}!`,\n            imageUrl: loseGif,\n            imageWidth: 400,\n            imageHeight: 250,\n            imageAlt: 'Custom image',\n          })\n        })\n        .catch((err) => {\n          console.log(err, 'error post lose')\n        })\n      }\n    }\n  }, [])\n  const handlePlayerLeave = (roomName, username) => {\n    dispatch(leaveRoom(roomName, username))\n    history.push('/room')\n  }\n  return (\n    <div className=\"container text-white\" \n      style={{\n      top: '15vh',\n      backgroundColor: '#900c3f',\n      position: 'absolute',\n      display: 'flex',\n      height: '39vh',\n      width: '49vw',\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 100,\n      flexDirection: 'column',\n      border: '10px solid #581845',\n      borderRadius: '25px'\n      }}>\n      <h1 style={{\n        color: '#ffc300',\n        webkitTextStroke: '3px #581845',\n        zIndex: '3',\n        fontWeight: '1000'\n        }}>{message}</h1>\n      <div style={{\n        display: 'flex',\n        justifyContent: 'center',\n        zIndex: '3'\n      }}>\n        <button onClick={handleRematch} style={{\n          marginRight: '15px',\n          backgroundColor: '#ff5733',\n          border: '4px solid #c70039',\n          borderRadius: '25px',\n          height: '2.5em',\n          width: '7.5em',\n          zIndex: '3'\n        }} >Rematch</button>\n          <button \n          onClick={() => handlePlayerLeave(name, loginUser)}\n          style={{\n          marginRight: '15px',\n          backgroundColor: '#c70079',\n          border: '4px solid #581845',\n          borderRadius: '25px',\n          height: '2.5em',\n          width: '10.5em',\n          zIndex: '5'\n        }}>Back to room</button>\n      </div>\n      <img src={bluefire} class=\"bluefire\" />\n    </div>\n  );\n}\n\nexport default FinishAnnouncement","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/redux/actions/index.js",[],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/index.js",[],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/redux/reducers/index.js",[],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/ModalLogin.js",[],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/Navbar.js",["214"],"import React from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport LeaderBoard from './LeaderBoard'\n// import logo from '../assets/logo.png'\nimport dakonan from '../assets/dakonan.png'\n\nconst NavbarTop = ({username}) => {\n  const history = useHistory() \n  const logout = () => {\n    localStorage.clear()\n    history.push('/')\n  }\n  return (\n    <nav class=\"navbar navbar-light\" style={{\n      padding: '25px 60px',\n      position: 'absolute',\n      top: '0',\n      left: '0',\n      width: '100%',\n      display: \"flex\",\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      zIndex: '1',\n      }}>\n      <div>\n        <Link to=\"/room\">\n        <img src={dakonan} class=\"logo\" style={{\n          maxWidth: '150px'\n        }}/>\n        </Link>\n      </div>\n      <div className=\"d-flex justify-content-between\" style={{\n        color: 'white'\n        }}>\n        <LeaderBoard></LeaderBoard>\n        <h5>{`${username.toLowerCase()}`}</h5>\n        <div onClick={() => logout()} className=\"btn-logout\">\n        <i class=\"fas fa-sign-out-alt\"></i>\n        <span className=\"tooltiptext\">logout</span>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavbarTop","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/BigHole.js",["215"],"import { Pebble } from '.'\nimport { motion, useAnimation } from 'framer-motion'\nimport { pebblesOrganizer } from '../helpers'\nimport { useEffect } from 'react'\n\nexport default function BigHole ({ bgColor = \"#f6f5f5\", pebbles = 0 }) {\n  const controls = useAnimation()\n  useEffect(() => {\n    controls.start({\n      backgroundColor: \"#f4f5db\", \n      transition: { duration: 0.4 }\n    })\n    setTimeout(() => {\n      controls.stop()\n      controls.start({ backgroundColor: bgColor })\n    }, 500)\n\n  }, [pebbles])\n\n  return (\n    <motion.div \n      className=\"big-bowl\"\n      initial={{backgroundColor: '#f4f5db'}}\n      animate={controls}\n    >\n      {\n       pebbles\n        ? [...Array(pebbles)].map((_, key) => (\n          <motion.div\n            animate={pebblesOrganizer(key, pebbles)}\n            key={key}\n          >\n            <Pebble\n              bgColor=\"#456990\"\n              isBigHole={true}\n            />\n          </motion.div>\n        ))\n        : null\n      }\n    </motion.div>\n  )\n}","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/Hole.js",["216"],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/CustomButton.js",[],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/Pebble.js",["217"],"import { useEffect } from 'react'\nimport { motion, usePresence } from 'framer-motion'\n\nexport default function Pebble ({ bgColor = \"black\", isBigHole }) {\n  const [ iamHere, removePebble ] = usePresence()\n  useEffect(() => {\n    !iamHere && setTimeout(removePebble, 400)\n  }, [iamHere])\n  return (\n    <motion.div \n      animate={{ \n        x: isBigHole ? 80 : 51,\n        y: isBigHole ? 90 : 51,\n        transition: {\n          duration: 0.55\n        }\n      }}\n      initial={{\n        x: 0,\n        y: 0\n      }}\n    >\n      <div className=\"pebble\" \n        style={{backgroundColor: bgColor}}\n      />\n    </motion.div>\n  )\n}","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/AnchorWrapper.js",[],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/LeaderBoard.js",["218"],"import { useState, useEffect } from 'react'\nimport { useDispatch, useSelector} from 'react-redux'\nimport { getLeaderBoard } from '../redux/actions'\nimport { Modal } from 'react-bootstrap'\n\nconst LeaderBoard = () => {\nconst dispatch = useDispatch()\nconst [show, setShow] = useState(false);\nconst handleClose = () => setShow(false);\nconst handleShow = () => setShow(true)\nconst leaderBoard = useSelector(state => state.rooms.leaderBoard)\n\nuseEffect(() => {\n  dispatch(getLeaderBoard())\n}, [show])\n\nreturn (\n<>\n  <div className=\"btn-leaderboard anchor-wrapper\" onClick={handleShow}>\n    <i className=\"fas fa-medal\"></i>\n    <span>leaderboard</span>\n  </div>\n\n  <Modal show={show} onHide={handleClose}>\n    <div className=\"leaderboard\">\n    <header>\n      <h1><strong>Leader Board</strong></h1>\n    </header>\n    <table>\n      <thead>\n        <tr>\n          <th className=\"rank\"></th>\n          <th className=\"username\">Username</th>\n          <th className=\"match\">Match</th>\n          <th className=\"winrate\">Winrate</th>\n        </tr>\n      </thead>\n      <tbody>\n      {\n        leaderBoard.map((data, index) => {\n          return (\n            <tr key={index + \"leaderboard\"}>\n              <td className=\"rank\">{index+1}</td>\n              <td className=\"username\">{data.username}</td>\n              <td className=\"match\">{data.matchCount}</td>\n              <td className=\"winrate\">{data.winRate}%</td>\n            </tr>\n          )\n        })\n      }\n      </tbody>\n    </table>\n  </div>\n  </Modal>\n</>\n)\n}\n\nexport default LeaderBoard","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/StatusBar.js",[],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/Board.js",["219"],"import React, { useEffect, useState } from 'react'\nimport { BigHole, Hole } from '.'\n\nconst Board = ({ board, clickHandler, roomDetail }) => {    \n  const [localBoard, setLocalBoard] = useState(board)\n  const username = localStorage.username\n  \n  useEffect(() => {\n    setLocalBoard(board)\n  }, [board])\n\n  const pebblesAdder = (clickedIndex, currentIndex) => {\n    if (clickedIndex < 6) {\n      setLocalBoard(localBoard => \n        localBoard.map((num, i) => {\n          if (i === currentIndex && i !== 13) return num + 1\n          return num\n        })\n      )\n    } else if (clickedIndex > 6) {\n      setLocalBoard(localBoard =>\n        localBoard.map((num, i) => {\n          if (i === currentIndex && i !== 6) {\n            return num + 1\n          }\n          return num\n        })\n      )\n    }\n  }\n\n  const lightController = (nextIndex, number) => {\n    const index = nextIndex - 1\n    const timeout = setInterval(() => {\n      if (number <= 0) {\n        clickHandler(index) //request to server\n        clearInterval(timeout)\n      } else if (number === 1) {\n        if (couldHijack(index, nextIndex)) {\n          const homeIndex = index < 6 ? 6 : 13\n          const hijackedIndex = 12 - nextIndex\n          setTimeout(() => {\n            hijacker(nextIndex, hijackedIndex, homeIndex)\n            number--\n          }, 500)\n        } else {\n          setTimeout(() => {\n            pebblesAdder(index, nextIndex)\n            number--\n          }, 500)\n        } \n      } else {\n        setTimeout(() => {\n          pebblesAdder(index, nextIndex)\n          number--\n          nextIndex++\n        }, 500)\n      }\n      if (nextIndex === 14 ) nextIndex = 0\n    }, 1000)\n  }\n\n  const couldHijack = (clickedIndex, lastIndex) => {\n   const allowedIndexToHijack = clickedIndex < 6\n      ? [7, 8, 9, 10, 11, 12]\n      : [0, 1, 2, 3, 4, 5]\n    // list of allowed index to hijact\n    if (!allowedIndexToHijack.includes(lastIndex) && !localBoard[lastIndex]) return true\n    return false\n  }\n\n  const hijacker = (nextIndex, hijackedIndex, homeIndex) => {\n    const currentPlayerNumber = localBoard[nextIndex]\n    const enemyNumber = localBoard[hijackedIndex]\n\n    setLocalBoard(localBoard => \n      localBoard.map((num, idx) => {\n        if (idx === hijackedIndex || idx === nextIndex) {\n          return 0\n        }\n        else if (idx == homeIndex) {\n          return localBoard[homeIndex] + currentPlayerNumber + enemyNumber\n        } else {\n          return num\n        }\n      })\n    )    \n  }\n\n  const boardClickHandler = (index, number) => {\n    if (!isNaN(index) && !isNaN(number)) {\n      setLocalBoard(localBoard => localBoard.map((num, i) => {\n        if (i === index) return 0\n        return num\n      }))\n      lightController(index + 1, number)\n    }\n  }\n\n  return (\n    <div className=\"board\">\n      <BigHole\n        className=\"big-bowl\"\n        pebbles={localBoard[13]}\n        bgColor=\"#f58634\"\n      />\n      <div>\n        <div className=\"d-flex\">\n        {\n          localBoard.slice(7, 13).reverse().map((number, idx) => (\n            <Hole\n              bgColor=\"#f58634\"\n              pebbles={number}\n              key={\"player2\" + idx}\n              onClick={() => {\n                username === roomDetail.users[0] || roomDetail.gameState.player !== 1\n                ? boardClickHandler()\n                : boardClickHandler(12 - idx, number)\n              }}\n            />\n          ))\n        }\n        </div>\n        <div className=\"d-flex\">\n        {\n          localBoard.slice(0, 6).map((number, idx) => (\n            <Hole \n              bgColor=\"#eb596e\"\n              pebbles={number}\n              key={\"player1\" + idx}\n              onClick={() => {\n                username === roomDetail.users[1] || roomDetail.gameState.player !== 0\n                ? boardClickHandler()\n                : boardClickHandler(idx, number)\n              \n              }}\n            />\n          ))\n        }\n        </div>\n      </div>\n      <BigHole\n        className=\"big-bowl\"\n        pebbles={localBoard[6]}\n        bgColor=\"#eb596e\"\n      />\n    </div>\n  )\n}\n\nexport default Board","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/inputField.js",[],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/JoinBox.js",["220"],"import React, { useState } from 'react'\nimport InputField from './inputField'\nimport JoinCard from './JoinCard'\nimport {useSelector} from 'react-redux'\nimport manblue from '../assets/manblue.png'\n\nconst JoinBox = () => {\n  const [searchRoom, setSearchRoom] = useState('')\n  const username = localStorage.username\n  let rooms = useSelector(state => state.rooms.data)\n  const targetRoom = rooms.filter(room => {\n      return room.name.toLowerCase() === searchRoom.toLowerCase()\n  })\n\n  const handleSearch = (input) => {\n      setSearchRoom(input)\n  }\n  return (\n    <div  className=\"container h-100 d-inline-block p-3\"\n    style={{\n      backgroundColor: '#ffc107',\n      borderRadius: '25px',\n      border: '8px solid #073b4c',\n      minHeight: '35vh',\n    }}\n    >\n      <>\n      <div>\n          <h3 style={{ color: '#073b4c'}}><strong>JOIN ROOM</strong></h3>\n      </div>\n      <InputField section=\"join\" handleSubmit={handleSearch}></InputField>\n      <div className=\"mt-2\">\n        <JoinCard rooms={targetRoom} username={username}></JoinCard>\n        {/* <RoomCard username={username} rooms={targetRoom} ></RoomCard> */}\n      </div>\n      </>\n    </div>\n  )\n}\n\nexport default JoinBox","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/RoomCard.js",[],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/RoomList.js",["221","222"],"import React, { useEffect } from 'react'\nimport InputField from './inputField'\nimport RoomCard from './RoomCard'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { updatedRoom } from '../redux/actions'\n\nconst RoomList = ({handleCreateRoom, rooms}) => {\n  const dispatch = useDispatch()\n  const username = localStorage.username\n  // let rooms = useSelector(state => state.rooms.data)\n  \n  useEffect(() => {\n    dispatch(updatedRoom())\n  }, [rooms])\n  \n\n  return (\n    <div className=\"container h-100 d-inline-block p-3 text-white\" \n    style={{\n      backgroundColor: '#073b4c',\n      borderRadius: '25px',\n      border: '8px solid'\n    }}>\n        <div className=\"d-flex justify-content-center\">\n            <h3><strong>ROOM LIST</strong></h3>\n        </div>\n        <InputField rooms={rooms} section=\"create\" handleSubmit={handleCreateRoom}></InputField>\n        <div className=\"row d-flex align-items-center shadow-lg mt-5 mx-auto\" style={{maxHeight: '30vw', overflow: 'auto'}}>\n            <RoomCard username={username} rooms={rooms}></RoomCard>\n        </div>\n    </div>\n  )\n}\n\nexport default RoomList","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/redux/reducers/playersReducer.js",[],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/redux/reducers/roomReducer.js",[],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/components/JoinCard.js",["223"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { joinRoom } from '../redux/actions'\n\nconst RoomCard = ({rooms, username}) => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleJoin = (username, roomName) => {\n      const payload = {\n          username,\n          roomName\n      }\n      dispatch(joinRoom(payload))\n      history.push(`/game/${roomName}`)\n  }\n  \n  return (\n      rooms.map((room, index) => (\n        <div key={index} class=\"card m-1 w-100\" >\n          <div class=\"row no-gutters text-dark\">\n            <div class=\"col-md-12\">\n            <div class=\"card-body \">\n              <div className=\"d-flex justify-content-center\">\n                <h4 className=\"card-title mr-2\">{`${room.name}`}</h4>\n                <p className=\"card-text\">{`(by ${room.admin})`}</p>\n              </div>\n              {\n                  room.users.length > 0 ?\n                  <div className=\"d-flex justify-content-center\">\n                    <div className=\"m-3\">\n                      <p className=\"card-text m-0\"><strong>{`player1`}</strong></p>\n                      <p className=\"card-text m-0\">{`${room.users[0]}`}</p>\n                    </div>\n                      {\n                          room.users.length > 1 ?\n                          <div className=\"m-3\">\n                            <p className=\"card-text m-0\"><strong>{`player2`}</strong></p>\n                            <p className=\"card-text m-0\">{`${room.users[1]}`}</p>\n                          </div>\n                          :\n                          \"\"\n                      }\n                  </div>\n                  :\n                  \"\"\n              }\n              {\n                room.users.length === 2 ?\n                <button style={{\n                  backgroundColor: '#red',\n                  borderRadius: '20px',\n                  width: '80px',\n                  height: '40px',\n                  color: 'black',\n                  border: '3px solid black'\n                }} className=\"btn btn-danger\">Full</button>\n                :\n              <button style={{\n                backgroundColor: '#ffc107',\n                borderRadius: '20px',\n                width: '80px',\n                height: '40px',\n                color: 'black',\n                border: '3px solid black'\n              }} onClick={() => handleJoin(username, room.name)}>Join</button>\n              }\n            </div>\n            </div>\n          </div>\n        </div>\n      )\n  ))\n}\n\nexport default RoomCard","/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/pages/index.js",[],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/helpers/index.js",[],"/home/ogy/Hacktiv/phase3/dakonan/dakonan-client/src/config.js",[],{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":20},{"ruleId":"228","severity":1,"message":"232","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":17},{"ruleId":"228","severity":1,"message":"233","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":19},{"ruleId":"234","severity":1,"message":"235","line":14,"column":7,"nodeType":"236","endLine":14,"endColumn":42},{"ruleId":"237","severity":1,"message":"238","line":17,"column":9,"nodeType":"236","endLine":17,"endColumn":21},{"ruleId":"234","severity":1,"message":"235","line":17,"column":21,"nodeType":"236","endLine":17,"endColumn":55},{"ruleId":"237","severity":1,"message":"238","line":19,"column":30,"nodeType":"236","endLine":19,"endColumn":42},{"ruleId":"237","severity":1,"message":"238","line":22,"column":30,"nodeType":"236","endLine":22,"endColumn":42},{"ruleId":"234","severity":1,"message":"235","line":38,"column":13,"nodeType":"236","endLine":38,"endColumn":46},{"ruleId":"234","severity":1,"message":"235","line":70,"column":11,"nodeType":"236","endLine":74,"endColumn":15},{"ruleId":"228","severity":1,"message":"239","line":8,"column":8,"nodeType":"230","messageId":"231","endLine":8,"endColumn":15},{"ruleId":"240","severity":1,"message":"241","line":20,"column":6,"nodeType":"242","endLine":20,"endColumn":13,"suggestions":"243"},{"ruleId":"240","severity":1,"message":"244","line":31,"column":6,"nodeType":"242","endLine":31,"endColumn":8,"suggestions":"245"},{"ruleId":"228","severity":1,"message":"246","line":2,"column":22,"nodeType":"230","messageId":"231","endLine":2,"endColumn":33},{"ruleId":"228","severity":1,"message":"247","line":2,"column":10,"nodeType":"230","messageId":"231","endLine":2,"endColumn":16},{"ruleId":"228","severity":1,"message":"248","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":12},{"ruleId":"228","severity":1,"message":"249","line":12,"column":8,"nodeType":"230","messageId":"231","endLine":12,"endColumn":18},{"ruleId":"228","severity":1,"message":"250","line":13,"column":8,"nodeType":"230","messageId":"231","endLine":13,"endColumn":22},{"ruleId":"228","severity":1,"message":"251","line":17,"column":7,"nodeType":"230","messageId":"231","endLine":17,"endColumn":13},{"ruleId":"228","severity":1,"message":"252","line":45,"column":9,"nodeType":"230","messageId":"231","endLine":45,"endColumn":16},{"ruleId":"228","severity":1,"message":"253","line":51,"column":10,"nodeType":"230","messageId":"231","endLine":51,"endColumn":16},{"ruleId":"228","severity":1,"message":"254","line":51,"column":18,"nodeType":"230","messageId":"231","endLine":51,"endColumn":27},{"ruleId":"228","severity":1,"message":"255","line":52,"column":10,"nodeType":"230","messageId":"231","endLine":52,"endColumn":20},{"ruleId":"228","severity":1,"message":"256","line":52,"column":22,"nodeType":"230","messageId":"231","endLine":52,"endColumn":35},{"ruleId":"228","severity":1,"message":"257","line":53,"column":10,"nodeType":"230","messageId":"231","endLine":53,"endColumn":16},{"ruleId":"228","severity":1,"message":"258","line":53,"column":18,"nodeType":"230","messageId":"231","endLine":53,"endColumn":27},{"ruleId":"228","severity":1,"message":"259","line":55,"column":10,"nodeType":"230","messageId":"231","endLine":55,"endColumn":15},{"ruleId":"228","severity":1,"message":"260","line":55,"column":17,"nodeType":"230","messageId":"231","endLine":55,"endColumn":25},{"ruleId":"228","severity":1,"message":"261","line":56,"column":9,"nodeType":"230","messageId":"231","endLine":56,"endColumn":18},{"ruleId":"228","severity":1,"message":"262","line":57,"column":9,"nodeType":"230","messageId":"231","endLine":57,"endColumn":18},{"ruleId":"228","severity":1,"message":"263","line":58,"column":9,"nodeType":"230","messageId":"231","endLine":58,"endColumn":17},{"ruleId":"228","severity":1,"message":"264","line":59,"column":9,"nodeType":"230","messageId":"231","endLine":59,"endColumn":17},{"ruleId":"240","severity":1,"message":"241","line":163,"column":6,"nodeType":"242","endLine":163,"endColumn":12,"suggestions":"265"},{"ruleId":"234","severity":1,"message":"235","line":249,"column":11,"nodeType":"236","endLine":253,"endColumn":15},{"ruleId":"266","severity":1,"message":"267","line":290,"column":56,"nodeType":"268","messageId":"269","endLine":290,"endColumn":58},{"ruleId":"234","severity":1,"message":"235","line":19,"column":7,"nodeType":"236","endLine":26,"endColumn":11},{"ruleId":"228","severity":1,"message":"251","line":9,"column":7,"nodeType":"230","messageId":"231","endLine":9,"endColumn":13},{"ruleId":"228","severity":1,"message":"270","line":14,"column":9,"nodeType":"230","messageId":"231","endLine":14,"endColumn":17},{"ruleId":"240","severity":1,"message":"271","line":20,"column":6,"nodeType":"242","endLine":20,"endColumn":8,"suggestions":"272"},{"ruleId":"240","severity":1,"message":"273","line":104,"column":8,"nodeType":"242","endLine":104,"endColumn":10,"suggestions":"274"},{"ruleId":"228","severity":1,"message":"275","line":144,"column":11,"nodeType":"230","messageId":"231","endLine":144,"endColumn":25},{"ruleId":"276","severity":1,"message":"277","line":180,"column":25,"nodeType":"278","messageId":"279","endLine":180,"endColumn":27},{"ruleId":"228","severity":1,"message":"280","line":3,"column":9,"nodeType":"230","messageId":"231","endLine":3,"endColumn":13},{"ruleId":"240","severity":1,"message":"281","line":108,"column":6,"nodeType":"242","endLine":108,"endColumn":8,"suggestions":"282"},{"ruleId":"234","severity":1,"message":"235","line":161,"column":7,"nodeType":"236","endLine":161,"endColumn":46},{"ruleId":"234","severity":1,"message":"235","line":27,"column":9,"nodeType":"236","endLine":29,"endColumn":13},{"ruleId":"240","severity":1,"message":"283","line":18,"column":6,"nodeType":"242","endLine":18,"endColumn":15,"suggestions":"284"},{"ruleId":"240","severity":1,"message":"283","line":29,"column":6,"nodeType":"242","endLine":29,"endColumn":15,"suggestions":"285"},{"ruleId":"240","severity":1,"message":"286","line":8,"column":6,"nodeType":"242","endLine":8,"endColumn":15,"suggestions":"287"},{"ruleId":"240","severity":1,"message":"241","line":15,"column":4,"nodeType":"242","endLine":15,"endColumn":10,"suggestions":"288"},{"ruleId":"266","severity":1,"message":"267","line":81,"column":22,"nodeType":"268","messageId":"269","endLine":81,"endColumn":24},{"ruleId":"228","severity":1,"message":"289","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":15},{"ruleId":"228","severity":1,"message":"246","line":4,"column":22,"nodeType":"230","messageId":"231","endLine":4,"endColumn":33},{"ruleId":"240","severity":1,"message":"241","line":14,"column":6,"nodeType":"242","endLine":14,"endColumn":13,"suggestions":"290"},{"ruleId":"228","severity":1,"message":"246","line":2,"column":23,"nodeType":"230","messageId":"231","endLine":2,"endColumn":34},"no-native-reassign",["291"],"no-negated-in-lhs",["292"],"no-unused-vars","'RegisterPage' is defined but never used.","Identifier","unusedVar","'LoginPage' is defined but never used.","'WaitingRoom' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'dakonan' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["293"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["294"],"'useSelector' is defined but never used.","'Header' is defined but never used.","'Peer' is defined but never used.","'microphone' is defined but never used.","'microphonestop' is defined but never used.","'socket' is assigned a value but never used.","'history' is assigned a value but never used.","'userID' is assigned a value but never used.","'setUserID' is assigned a value but never used.","'audioMuted' is assigned a value but never used.","'setAudioMuted' is assigned a value but never used.","'stream' is assigned a value but never used.","'setStream' is assigned a value but never used.","'peers' is assigned a value but never used.","'setPeers' is assigned a value but never used.","'socketRef' is assigned a value but never used.","'userVideo' is assigned a value but never used.","'peersRef' is assigned a value but never used.","'roomName' is assigned a value but never used.",["295"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'username' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.",["296"],"React Hook useEffect has a missing dependency: 'roomName'. Either include it or remove the dependency array.",["297"],"'handleMoveRoom' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'loginUser', 'roomDetail.gameState.message', and 'roomDetail.users'. Either include them or remove the dependency array.",["298"],"React Hook useEffect has missing dependencies: 'bgColor' and 'controls'. Either include them or remove the dependency array.",["299"],["300"],"React Hook useEffect has a missing dependency: 'removePebble'. Either include it or remove the dependency array.",["301"],["302"],"'manblue' is defined but never used.",["303"],"no-global-assign","no-unsafe-negation",{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"316","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"304","fix":"323"},"Update the dependencies array to be: [dispatch, rooms]",{"range":"324","text":"325"},"Update the dependencies array to be: [history]",{"range":"326","text":"327"},"Update the dependencies array to be: [dispatch, turn]",{"range":"328","text":"329"},"Update the dependencies array to be: [props.peer]",{"range":"330","text":"331"},"Update the dependencies array to be: [roomName]",{"range":"332","text":"333"},"Update the dependencies array to be: [loginUser, roomDetail.gameState.message, roomDetail.users]",{"range":"334","text":"335"},"Update the dependencies array to be: [bgColor, controls, pebbles]",{"range":"336","text":"337"},{"range":"338","text":"337"},"Update the dependencies array to be: [iamHere, removePebble]",{"range":"339","text":"340"},"Update the dependencies array to be: [dispatch, show]",{"range":"341","text":"342"},{"range":"343","text":"325"},[694,701],"[dispatch, rooms]",[894,896],"[history]",[4951,4957],"[dispatch, turn]",[605,607],"[props.peer]",[3247,3249],"[roomName]",[3091,3093],"[loginUser, roomDetail.gameState.message, roomDetail.users]",[501,510],"[bgColor, controls, pebbles]",[642,651],[276,285],"[iamHere, removePebble]",[487,493],"[dispatch, show]",[450,457]]