[{"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/index.js":"1","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/reportWebVitals.js":"2","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/App.js":"3","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/redux/store/index.js":"4","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/pages/Room.js":"5","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/pages/RegisterPage.js":"6","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/pages/MainPage.js":"7","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/pages/LoginPage.js":"8","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/pages/WaitingRoom.js":"9","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/pages/GamePage.js":"10","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/utils.js":"11","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/RoomList.js":"12","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/JoinBox.js":"13","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/Navbar.js":"14","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/LeaderBoard.js":"15","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/ModalLogin.js":"16","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/FinishAnnouncement.js":"17","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/redux/reducers/index.js":"18","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/index.js":"19","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/redux/actions/index.js":"20","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/inputField.js":"21","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/RoomCard.js":"22","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/redux/reducers/playersReducer.js":"23","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/redux/reducers/roomReducer.js":"24","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/BigHole.js":"25","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/Board.js":"26","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/Hole.js":"27","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/Pebble.js":"28","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/Header.js":"29","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/StatusBar.js":"30","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/helpers/index.js":"31","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/HowToPlay.js":"32"},{"size":701,"mtime":1611698144583,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1611698144587,"results":"35","hashOfConfig":"34"},{"size":813,"mtime":1611736051160,"results":"36","hashOfConfig":"34"},{"size":217,"mtime":1611698144587,"results":"37","hashOfConfig":"34"},{"size":2864,"mtime":1611701312451,"results":"38","hashOfConfig":"34"},{"size":3657,"mtime":1611698144587,"results":"39","hashOfConfig":"34"},{"size":2002,"mtime":1611699237766,"results":"40","hashOfConfig":"34"},{"size":2258,"mtime":1611698144587,"results":"41","hashOfConfig":"34"},{"size":2893,"mtime":1611708342171,"results":"42","hashOfConfig":"34"},{"size":2922,"mtime":1611721616214,"results":"43","hashOfConfig":"34"},{"size":4389,"mtime":1611698144587,"results":"44","hashOfConfig":"34"},{"size":1063,"mtime":1611698893048,"results":"45","hashOfConfig":"34"},{"size":1086,"mtime":1611725359525,"results":"46","hashOfConfig":"34"},{"size":1147,"mtime":1611698562344,"results":"47","hashOfConfig":"34"},{"size":1703,"mtime":1611698144583,"results":"48","hashOfConfig":"34"},{"size":1566,"mtime":1611698144583,"results":"49","hashOfConfig":"34"},{"size":2733,"mtime":1611720650798,"results":"50","hashOfConfig":"34"},{"size":248,"mtime":1611698144587,"results":"51","hashOfConfig":"34"},{"size":587,"mtime":1611736067463,"results":"52","hashOfConfig":"34"},{"size":3853,"mtime":1611698144587,"results":"53","hashOfConfig":"34"},{"size":900,"mtime":1611698144583,"results":"54","hashOfConfig":"34"},{"size":2682,"mtime":1611698744324,"results":"55","hashOfConfig":"34"},{"size":394,"mtime":1611698144587,"results":"56","hashOfConfig":"34"},{"size":700,"mtime":1611698144587,"results":"57","hashOfConfig":"34"},{"size":612,"mtime":1611698144583,"results":"58","hashOfConfig":"34"},{"size":4111,"mtime":1611698144583,"results":"59","hashOfConfig":"34"},{"size":1110,"mtime":1611698144583,"results":"60","hashOfConfig":"34"},{"size":839,"mtime":1611698144583,"results":"61","hashOfConfig":"34"},{"size":163,"mtime":1611698144583,"results":"62","hashOfConfig":"34"},{"size":781,"mtime":1611698144583,"results":"63","hashOfConfig":"34"},{"size":879,"mtime":1611698144583,"results":"64","hashOfConfig":"34"},{"size":370,"mtime":1611736111609,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"3ycn83",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/index.js",[],["143","144"],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/reportWebVitals.js",[],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/App.js",["145","146","147"],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/redux/store/index.js",[],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/pages/Room.js",["148","149","150"],"import React, { useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { createRoom, updateRoom } from '../redux/actions'\nimport RoomList from '../components/RoomList'\nimport JoinBox from '../components/JoinBox'\nimport { useHistory } from 'react-router-dom'\nimport NavbarTop from '../components/Navbar'\nimport Swal from 'sweetalert2'\nimport { updatedRoom } from '../redux/actions'\nimport dakonan from '../assets/dakonan.png'\nimport stars from '../assets/stars.gif'\n\nconst Room = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const username = localStorage.username\n  let rooms = useSelector(state => state.rooms.data)\n  \n  useEffect(() => {\n    dispatch(updatedRoom())\n    console.log(rooms,' di use effect room')\n  }, [rooms])\n\n  useEffect(() => {\n      dispatch(updateRoom())\n  },[dispatch])\n\n  useEffect(() => {\n    let isLoggedIn = localStorage.access_token\n    if(!isLoggedIn) {\n      history.push('/')\n    }\n  }, [])\n\n  const handleCreateRoom = (roomName) => {\n    let isAlreadyUsed\n    isAlreadyUsed = rooms.findIndex(room => {\n      return room.name === roomName\n    })\n    if(isAlreadyUsed === -1 || !roomName) {\n      let payload = {\n        roomName,\n        username\n      }\n      dispatch(createRoom(payload))\n      history.push(`/game/${roomName}`)\n    } else {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'Room Name Already Used'\n      })\n    }\n\n  }\n    \n  return (\n    <>\n      <section style={{\n        backgroundColor: 'blue',\n        padding: '0px 20px',\n        backgroundImage: `url(${stars})`,\n        backgroundSize: '50%',\n        backgroundRepeat: 'repeat',\n        display: 'flex', justifyContent: 'space-between'\n      }}>\n      \n      <NavbarTop username={username}></NavbarTop>\n      \n\n      <div className=\"col-12\">\n        <div className=\"row room-body justify-content-center\"\n        style={{\n          // backgroundColor: 'red',\n        }}\n        >\n          {/* <div className='col-1' style={{backgroundColor: 'red'}}></div> */}\n          <div className=\"row col-8 justify-content-center\">\n            <div className=\"col-12\">\n              <img src={dakonan} class=\"dakonan\" style={{\n                maxWidth: '180px',\n                paddingBottom: '20px',\n                // paddingTop: '20px',\n                filter: 'drop-shadow(2px 2px 0 black) drop-shadow(-2px 2px 0 black)'\n\n              }}/>\n            </div>\n\n\n            <div className='col-lg-5 col-sm-12'>\n              <JoinBox></JoinBox>\n            </div>\n            <div className=\"col-lg-7 col-sm-12\">\n              <RoomList handleCreateRoom={handleCreateRoom}></RoomList>\n          </div>\n        </div>\n        {/* <div className='col-1' style={{backgroundColor: 'red'}}></div> */}\n        </div>\n      </div>\n      </section>\n    </>\n  )\n}\nexport default Room","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/pages/RegisterPage.js",["151","152"],"import React, {useEffect, useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { getPlayer, register } from '../redux/actions'\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch()\n  const allPlayer = useSelector(state => state.players.allPlayer)\n  const [formInput, setFormInput] = useState({\n    email: '',\n    username: '',\n    password: ''\n  })\n\n  useEffect(() => {\n    console.log(allPlayer, 'di use effect')\n  }, [])\n\n  const [errors, setErrors] = useState({\n    email: false,\n    username: false,\n    password: false\n  })\n\n  const handleChange = (e) => {\n    const name = e.target.name\n    const value = e.target.value\n    const obj = {...formInput}\n    obj[name] = value\n    setFormInput(obj)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    let errorsMessage = false\n    let newError = {\n      title: false,\n      overview: false,\n      poster_path: false,\n      popularity: false,\n      tags: false\n  }\n\n    if(formInput.email.length === 0 || formInput.email.trim().length === 0) {\n      errorsMessage = true\n      newError.email = 'email is required and valid email'\n    }\n    if(!formInput.username.length === 0 || formInput.username.trim().length === 0) {\n      errorsMessage = true\n      newError.username = 'username is required'\n    }\n    if(formInput.password.length < 6 || formInput.password.trim().length < 6) {\n      errorsMessage = true\n      newError.password = 'password is required and minimum 6 character'\n    }    \n    if(errorsMessage) {\n      errorsMessage = false\n      setErrors(newError)\n    }\n\n    if (formInput.email && formInput.username && formInput.password.length >= 6) {\n      console.log('sukses regis')\n      const payload = {\n        email: formInput.email,\n        username: formInput.username,\n        password: formInput.password\n      }\n      console.log(payload);\n      dispatch(register(payload))\n    }\n\n\n  }\n\n  return (\n    <div>\n      <div className=\"container\">\n        <form onSubmit={handleSubmit}>\n        <div class=\"form-group\">\n                <label >Email</label>\n                <input name=\"email\" onChange={handleChange} type=\"email\" class=\"form-control\" placeholder=\"Enter Your Username\"/>\n                {\n                  errors.email ?\n                  <div className=\"error-email\">\n                    <span>{errors.email}</span>\n                  </div>\n                  :\n                  ''\n                }\n            </div>\n            <div class=\"form-group\">\n                <label >USERNAME</label>\n                <input name=\"username\" onChange={handleChange} type=\"text\" class=\"form-control\" placeholder=\"Enter Your Username\"/>\n                {\n                  errors.username ?\n                  <div className=\"error-username\">\n                    <span>{errors.username}</span>\n                  </div>\n                  :\n                  ''\n                }\n            </div>\n            <div class=\"form-group\">\n                <label >PASSWORD</label>\n                <input name=\"password\" onChange={handleChange} type=\"password\" class=\"form-control\" placeholder=\"Enter Your Username\"/>\n                {\n                  errors.password ?\n                  <div className=\"error-password\">\n                    <span>{errors.password}</span>\n                  </div>\n                  :\n                  ''\n                }\n            </div>\n            <div className=\"form-group\">\n                <button className=\"btn btn-dark mt-2\" type=\"submit\">\n                    Register\n                </button>\n            </div>\n        </form>\n      </div>\n    </div>\n  )\n\n}\n\nexport default RegisterPage","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/pages/MainPage.js",["153","154","155","156","157","158","159"],"import React from 'react'\nimport ModalLogin from '../components/ModalLogin'\nimport LeaderBoard from '../components/LeaderBoard'\n\nimport man from '../assets/man.png'\nimport logo from '../assets/logo.png'\nimport fire from '../assets/fire.gif'\n\n\nconst MainPage = () => {\n  return (\n    // <div className=\"container\" style={{display: 'flex', justifyContent: 'center', alignSelf: 'center'}}>\n    //   <div className=\"container d-flex justify-content-center align-items-center shadow-lg mx-auto\" style={{height: '20vw', width: '30vw'}}>\n    //     <div>\n    //       <div className=\"d-flex justify-content-center\">\n    //         <h1>DAKONAN</h1>\n    //       </div>\n    //       <div className=\"d-flex justify-content-center\"  >\n    //         <button className=\"btn btn-warning mr-3 w-60\">How To Play</button>\n    //         <ModalLogin></ModalLogin>\n    //           {/* <button onClick={() => history.push('/register')} className=\"btn btn-dark w-50\">Play</button> */}\n    //       </div>\n    //     </div>\n    //   </div>\n    // </div>\n    <>\n      <section>\n        <img src={fire} class=\"fire\" />\n        <div class=\"circle\"></div>\n        <header className='headerMainPage'>\n            <a href=\"#\"><img src={logo} class=\"logo\"/></a>\n            <ul>\n                <li><a href=\"#\">How to Play</a></li>\n                <li><a href=\"#\"><LeaderBoard></LeaderBoard></a></li>\n                <li><a href=\"#\">About Us</a></li>\n            </ul>\n        </header>\n        <div class=\"content\">\n            <div class=\"textBox\">\n                <h2>Bukan dakon biasa.<br/>Tapi <span>DAKONAN</span></h2>\n                <p>Dakonan adalah board game digital yang cara mainnya terinspirasi dari permainan tradisional nusantara seperti congklak, dakon, dan mancala.</p>\n                <ModalLogin></ModalLogin>\n            </div>\n            <div class=\"imgBox\">\n                <img src={man} class=\"man\" />\n            </div>            \n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default MainPage","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/pages/LoginPage.js",["160"],"import React, { useEffect, useState } from 'react'\nimport {useDispatch} from 'react-redux'\nimport {useHistory} from 'react-router-dom'\nimport { createPlayer } from '../redux/actions'\nimport axios from 'axios'\nimport Swal from 'sweetalert2'\n\nconst LoginPage = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const [formInput, setFormInput] = useState({\n    username: '',\n    password: ''\n  })\n\n  const handleChange = (e) => {\n    const name = e.target.name\n    const value = e.target.value\n    const obj = {...formInput}\n    obj[name] = value\n    setFormInput(obj)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const payload = {\n        username: formInput.username,\n        password: formInput.password\n    }\n    axios({\n      url: `/login`,\n      method: 'POST',\n      data: payload\n    })\n      .then(res => {\n        localStorage.setItem('access_token', res.data.access_token)\n        localStorage.setItem('username', payload.username)\n        dispatch(createPlayer(payload))\n        Swal.fire({\n          position: 'top-end',\n          icon: 'success',\n          title: 'Login Success',\n          showConfirmButton: false,\n          timer: 1000\n        })\n        history.push('/room')\n      })\n      .catch(err => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: err.response.data.message\n        })\n      })\n  }\n  return (\n      <div>\n        <div className=\"container\">\n          <form onSubmit={(e) => handleSubmit(e)}>\n            <div className=\"form-group\">\n              <label >USERNAME</label>\n              <input name=\"username\" type=\"text\" className=\"form-control\" placeholder=\"Enter Your Username\"\n              onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label >PASSWORD</label>\n              <input name=\"password\" type=\"password\" className=\"form-control\" placeholder=\"Enter Your Username\"\n              onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <button className=\"btn-dark mt-2\" type=\"submit\">Login</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n}\n\nexport default LoginPage","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/pages/WaitingRoom.js",["161"],"import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { leaveRoom, readyToPlay } from '../redux/actions'\nimport stars from '../assets/stars.gif'\nimport loadingnew from '../assets/loadingnew.gif'\n\nconst WaitingRoom = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const {name} = useParams()\n  const [ready, setReady] = useState(false)\n  const username = localStorage.username\n  const roomDetail = useSelector(state => state.rooms.detail)\n\n  const handleReady = (roomName) => {\n    setReady(true)\n    dispatch(readyToPlay(roomName))\n  }\n\n  const handlePlayerLeave = (roomName, username) => {\n    dispatch(leaveRoom(roomName, username))\n    history.push('/room')\n  }\n  return (\n    \n    <section style={{\n      backgroundColor: 'purple',\n      padding: '0px 20px',\n      backgroundImage: `url(${stars})`,\n      backgroundSize: '50%',\n      backgroundRepeat: 'repeat',\n      display: 'flex', justifyContent: 'center'\n    }}>\n    \n    <div className=\" row container d-flex flex-column justify-content-center align-items-center bg-warning text-light\" \n    style={{\n      borderRadius: '25px',\n      border: '8px solid black',\n      height: '30vh',\n      width: '70vh',\n      zIndex: '1'\n    }}>\n      {\n        !ready ?\n        <>\n        <h1 style={{color: 'black'}}><strong>REAADDYYY????</strong></h1>\n        {\n          roomDetail.name ? \n          <p style={{color: 'black'}}>{`${roomDetail.users.length}/2`}</p>\n          :\n          \"\"\n        }\n        <div className=\"container d-flex justify-content-center\">\n          <button onClick={() => handleReady(name)} className=\"btn- btn-dark mr-3 w-25\" style={{\n            border: '5px solid black',\n            borderRadius: '25px'\n            }}>GO</button>\n          <button onClick={() => handlePlayerLeave(name, username)} className=\"btn- btn-danger w-25\" style={{\n            border: '5px solid black',\n            borderRadius: '25px'\n            }}>Leave Room</button>\n        </div>\n        </>\n        :\n        <>\n        <div className='row justify-content-center'>\n        <h1 className='col-12' style={{color: 'black'}}><strong>WAITING FOR OTHER PLAYER</strong></h1>\n        <div className='col-12'>\n          <img src={loadingnew} className=\"loadingnew\" style={{\n            maxHeight: '100px',\n            marginTop: '-3vh',\n            marginBottom: '-2vh'\n          }}/>\n        </div>\n        <button onClick={() => handlePlayerLeave(name, username)} className=\"btn- btn-danger w-25\" style={{\n          border: '5px solid black',\n          borderRadius: '25px'\n        }}>Leave Room</button>\n        </div>\n        </>\n      }\n      {/* <p>{JSON.stringify(roomDetail)}</p> */}\n    </div>\n      {/* <img src={manhead} class=\"manhead\" /> */}\n    </section>\n    \n  )\n}\n\nexport default WaitingRoom","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/pages/GamePage.js",["162","163","164","165","166"],"import React, { useEffect, useState } from 'react'\nimport { Header, Board, StatusBar, NavbarTop } from '../components'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { makeMove, emptyHomes } from '../utils'\nimport io from 'socket.io-client'\nimport { gameStart, readyToRematch, updateGameDetail } from '../redux/actions'\nimport {useParams} from 'react-router-dom'\nimport fullPageImage from '../assets/GameContainer.png'\nimport FinishAnnouncement from '../components/FinishAnnouncement'\nimport WaitingRoom from './WaitingRoom'\n\nconst socket = io('http://localhost:4000')\n\nconst START_AMOUNT = 4\n\nconst intialState = {\n  player: 0,\n  board: emptyHomes(Array(14).fill(START_AMOUNT)),\n  isOver: false,\n  message: ''\n}\n\nconst GamePage = () => {\n  const dispatch = useDispatch()\n  const {name} = useParams()\n  const username = localStorage.username\n  const roomDetail = useSelector(state => state.rooms.detail)\n  const loading = useSelector(state => state.rooms.loading)\n  const [turn, setTurn] = useState(false)\n\n  useEffect(() => {\n    dispatch(updateGameDetail())\n  }, [turn])\n\n  function clickHandler (i) {\n    const gameDetail = {...roomDetail.gameState}\n    const newState = makeMove(i)(gameDetail)\n    setTurn(!turn)\n    dispatch(gameStart(newState, name))\n  }\n\n  function HandleRematch () {\n    dispatch(readyToRematch(intialState, name))\n    // dispatch(gameStart(intialState, name))\n  }\n\n  return (\n    <>\n    <NavbarTop username={username}></NavbarTop>\n    <div className=\"App\" style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      position: 'relative',\n      // top: '4vh',\n      // backgroundColor:'blue',\n      height: '100vh'\n    }}>\n      {\n        !loading ?\n        <h1>Loading</h1>\n        :\n        roomDetail.name && roomDetail.ready[0] === true && roomDetail.ready[1] === true  ?\n        <>\n        {/* <Header /> */}\n\n        <StatusBar\n          player={roomDetail.gameState.player}\n          isOver={roomDetail.gameState.isOver}\n          message={roomDetail.gameState.message}\n        />\n        <div className=\"fullPageImage\">\n          <img src={fullPageImage} style={{\n            maxWidth: '1095px',\n            height: '90vh',\n            width: '200vw '\n          }}/>\n        </div>\n\n        <Board\n          board={roomDetail.gameState.board}\n          clickHandler={clickHandler}\n        />\n        {/* <p>{JSON.stringify(roomDetail)}</p> */}\n        {/* <button onClick={resetHandler}>\n          Reset\n        </button> */}\n        </>\n        :\n        <WaitingRoom></WaitingRoom>\n      }\n    </div>\n\n      {\n        roomDetail.name && roomDetail.gameState.isOver == true ?\n        <div className=\"d-flex justify-content-center\">\n          <FinishAnnouncement handleRematch={HandleRematch} message={roomDetail.gameState.message}></FinishAnnouncement>\n        </div>\n        :\n        \"\"\n      }\n    </>\n  );\n}\n\nexport default GamePage;","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/utils.js",[],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/RoomList.js",["167"],"import React, { useEffect } from 'react'\nimport InputField from './inputField'\nimport RoomCard from './RoomCard'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { updatedRoom } from '../redux/actions'\n\nconst RoomList = ({handleCreateRoom}) => {\n  const dispatch = useDispatch()\n  const username = localStorage.username\n  let rooms = useSelector(state => state.rooms.data)\n  \n  useEffect(() => {\n    dispatch(updatedRoom())\n  }, [rooms])\n  \n\n  return (\n    <div className=\"container bg-dark h-100 d-inline-block p-3 text-white\" \n    style={{\n      borderRadius: '25px',\n      border: '6px solid'\n    }}>\n        <div className=\"d-flex justify-content-center\">\n            <h3>ROOM LIST</h3>\n        </div>\n        <InputField rooms={rooms} section=\"create\" handleSubmit={handleCreateRoom}></InputField>\n        <div className=\"row d-flex align-items-center shadow-lg mt-5 mx-auto\" style={{maxHeight: '30vw', overflow: 'auto'}}>\n            <RoomCard username={username} rooms={rooms}></RoomCard>\n        </div>\n    </div>\n  )\n}\n\nexport default RoomList","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/JoinBox.js",["168"],"import React, { useState } from 'react'\nimport InputField from './inputField'\nimport RoomCard from './RoomCard'\nimport {useSelector} from 'react-redux'\nimport manblue from '../assets/manblue.png'\n\nconst JoinBox = () => {\n  const [searchRoom, setSearchRoom] = useState('')\n  const username = localStorage.username\n  let rooms = useSelector(state => state.rooms.data)\n  const targetRoom = rooms.filter(room => {\n      return room.name.toLowerCase() === searchRoom.toLowerCase()\n  })\n\n  const handleSearch = (input) => {\n      setSearchRoom(input)\n  }\n  return (\n    <div  className=\"container bg-warning h-100 d-inline-block p-3\"\n    style={{\n      borderRadius: '25px',\n      border: '6px solid'\n    }}\n    >\n      <div>\n          <h3>JOIN ROOM</h3>\n      </div>\n      <InputField section=\"join\" handleSubmit={handleSearch}></InputField>\n      <div className=\"mt-5\">\n        <RoomCard username={username} rooms={targetRoom} ></RoomCard>\n      </div>\n      {/* <div className='yellow'></div> */}\n      {/* <img src={manblue} class=\"manblue\" /> */}\n    </div>\n  )\n}\n\nexport default JoinBox","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/Navbar.js",["169"],"import React from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport LeaderBoard from './LeaderBoard'\nimport logo from '../assets/logo.png'\n\nconst NavbarTop = ({username}) => {\n  const history = useHistory() \n  const logout = () => {\n    localStorage.clear()\n    history.push('/')\n  }\n  return (\n    <nav class=\"navbar navbar-light\" style={{\n      padding: '25px 60px',\n      position: 'absolute',\n      top: '0',\n      left: '0',\n      width: '100%',\n      display: \"flex\",\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      zIndex: '1',\n      }}>\n      <div>\n        <Link to=\"/room\">\n        <img src={logo} class=\"logo\" style={{\n          maxWidth: '70px'\n        }}/>\n        </Link>\n      </div>\n      <div className=\"d-flex justify-content-between\" style={{\n        color: 'white'\n        }}>\n        <LeaderBoard></LeaderBoard>\n        <h5>{`${username.toLowerCase()}`}</h5>\n        <div onClick={() => logout()} className=\"btn-logout\">\n        <i class=\"fas fa-sign-out-alt\"></i>\n        <span className=\"tooltiptext\">logout</span>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavbarTop","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/LeaderBoard.js",["170","171"],"import React, {useState, useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {getLeaderBoard} from '../redux/actions'\nimport {Modal, Button} from 'react-bootstrap'\n\nconst LeaderBoard = () => {\nconst dispatch = useDispatch()\nconst [show, setShow] = useState(false);\nconst handleClose = () => setShow(false);\nconst handleShow = () => setShow(true)\nconst leaderBoard = useSelector(state => state.rooms.leaderBoard)\n\nuseEffect(() => {\n  dispatch(getLeaderBoard())\n  // console.log(leaderBoard)\n}, [show])\n\nreturn (\n  <>\n  <div className=\"btn-leaderboard\" onClick={handleShow}>\n      <i className=\"fas fa-medal\"></i>\n      <span>leaderboard</span>\n  </div>\n  {/* <Button variant=\"primary\">\n      LeaderBoard\n  </Button> */}\n\n  <Modal show={show} onHide={handleClose}>\n    <div className=\"leaderboard\">\n    <header>\n      <h1><strong>Leader Board</strong></h1>\n      {/* <img src=\"https://i.imgur.com/xUSrEpd.png\" alt=\"\"></img> */}\n    </header>\n    <table>\n      <thead>\n        <tr>\n          <th className=\"rank\"></th>\n          <th className=\"username\">Username</th>\n          <th className=\"match\">Match</th>\n          <th className=\"winrate\">Winrate</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          leaderBoard.map((data, index) => {\n            return (\n              <tr>\n                <td className=\"rank\">{index+1}</td>\n                <td className=\"username\">{data.username}</td>\n                <td className=\"match\">{data.matchCount}</td>\n                <td className=\"winrate\">{data.winRate}%</td>\n              </tr>\n            )\n          })\n        }\n      </tbody>\n    </table>\n  </div>\n  </Modal>\n \n</>\n)\n}\n\nexport default LeaderBoard","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/ModalLogin.js",[],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/FinishAnnouncement.js",["172","173","174"],"import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport axios from 'axios'\nimport bluefire from '../assets/bluefire.gif'\nconst FinishAnnouncement = ({message, handleRematch}) => {\n  const roomDetail = useSelector(state => state.rooms.detail)\n  useEffect(() => {\n    console.log(roomDetail)\n    if (roomDetail.gameState.message === 'Player 1 wins!') {\n      axios({\n      url: `/win`,\n      method: 'POST',\n      headers: {\n        username: roomDetail.users[0]\n      }\n    })\n      .then(res => {\n        return axios({\n          url: `/lose`,\n          method: 'POST',\n          headers: {\n            username: roomDetail.users[1]\n          }\n    })\n      .then((res) => {\n        console.log(res)\n    })\n      })\n      .catch(err => {\n        console.log(err, 'error di post win')\n      })\n    } else {\n      axios({\n      url: `/win`,\n      method: 'POST',\n      headers: {\n        username: roomDetail.users[1]\n      }\n    })\n      .then(res => {\n        return axios({\n          url: `/lose`,\n          method: 'POST',\n          headers: {\n            username: roomDetail.users[0]\n          }\n    })\n      .then((res) => {\n        console.log(res)\n    })\n      })\n      .catch(err => {\n        console.log(err, 'error di post win')\n      })\n    }\n  }, [])\n  return (\n    <div className=\"container text-white\" \n      style={{\n      top: '15vh',\n      backgroundColor: '#900c3f',\n      position: 'absolute',\n      display: 'flex',\n      height: '39vh',\n      width: '49vw',\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 100,\n      flexDirection: 'column',\n      border: '10px solid #581845',\n      borderRadius: '25px'\n      }}>\n      <h1 style={{\n        color: '#ffc300',\n        webkitTextStroke: '3px #581845',\n        zIndex: '3',\n        fontWeight: '1000'\n        }}>{message}</h1>\n      <div style={{\n        display: 'flex',\n        justifyContent: 'center',\n        zIndex: '3'\n      }}>\n        <button onClick={handleRematch} style={{\n          marginRight: '15px',\n          backgroundColor: '#ff5733',\n          border: '4px solid #c70039',\n          borderRadius: '25px',\n          height: '2.5em',\n          width: '7.5em',\n          zIndex: '3'\n        }} >Rematch</button>\n        <Link to=\"/room\">\n          <button style={{\n          marginRight: '15px',\n          backgroundColor: '#c70079',\n          border: '4px solid #581845',\n          borderRadius: '25px',\n          height: '2.5em',\n          width: '10.5em',\n          zIndex: '5'\n        }}>Back to room</button>\n        </Link>\n      </div>\n      <img src={bluefire} class=\"bluefire\" />\n    </div>\n  );\n}\n\nexport default FinishAnnouncement","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/redux/reducers/index.js",[],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/index.js",[],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/redux/actions/index.js",[],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/inputField.js",[],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/RoomCard.js",[],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/redux/reducers/playersReducer.js",[],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/redux/reducers/roomReducer.js",[],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/BigHole.js",[],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/Board.js",["175","176"],"import { set } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { BigHole, Hole } from '.'\n\nconst Board = ({ board, clickHandler }) => {  \n  const [localBoard, setLocalBoard] = useState(board)\n  const [light, setLight] = useState([]) //array of index where holes have white background\n\n  useEffect(() => {\n    setLocalBoard(board)\n  }, [board])\n\n  const pebblesAdder = (clickedIndex, currentIndex) => {\n    if (clickedIndex < 6) {\n      setLocalBoard(localBoard => \n        localBoard.map((num, i) => {\n          if (i === currentIndex && i !== 13) return num + 1\n          return num\n        })\n      )\n    } else if (clickedIndex > 6) {\n      setLocalBoard(localBoard =>\n        localBoard.map((num, i) => {\n          if (i === currentIndex && i !== 6) {\n            return num + 1\n          }\n          return num\n        })\n      )\n    }\n  }\n\n  const lightController = (nextIndex, number) => {\n    const index = nextIndex - 1\n\n    const timeout = setInterval(() => {\n      if (number <= 0) {\n        setLight([])\n        clickHandler(index) //request to server\n        clearInterval(timeout)\n      } else if (number === 1) {\n        if (couldHijack(index, nextIndex)) {\n          const homeIndex = index < 6 ? 6 : 13\n          const hijackedIndex = 12 - nextIndex\n          setLight([homeIndex, hijackedIndex, nextIndex])\n          setTimeout(() => {\n            hijacker(nextIndex, hijackedIndex, homeIndex)\n            number--\n          }, 600)\n        } else {\n          setLight([nextIndex])\n          setTimeout(() => {\n            pebblesAdder(index, nextIndex)\n            number--\n          }, 600)\n        } \n      } else {\n        setLight([nextIndex])\n        setTimeout(() => {\n          pebblesAdder(index, nextIndex)\n          number--\n          nextIndex++\n        }, 600)\n      }\n      if (nextIndex === 14 ) nextIndex = 0\n    }, 1000)\n  }\n  \n\n  const couldHijack = (clickedIndex, lastIndex) => {\n   const allowedIndexToHijack = clickedIndex < 6\n      ? [7, 8, 9, 10, 11, 12]\n      : [0, 1, 2, 3, 4, 5]\n    // list of allowed index to hijact\n    if (!allowedIndexToHijack.includes(lastIndex) && !localBoard[lastIndex]) return true\n    return false\n  }\n\n  const hijacker = (nextIndex, hijackedIndex, homeIndex) => {\n    const currentPlayerNumber = localBoard[nextIndex]\n    const enemyNumber = localBoard[hijackedIndex]\n\n    setLocalBoard(localBoard => \n      localBoard.map((num, idx) => {\n        if (idx === hijackedIndex || idx === nextIndex) {\n          return 0\n        }\n        else if (idx == homeIndex) {\n          return localBoard[homeIndex] + currentPlayerNumber + enemyNumber\n        } else {\n          return num\n        }\n      })\n    )    \n  }\n\n  const boardClickHandler = (index, number) => {\n    setLocalBoard(localBoard => localBoard.map((num, i) => {\n      if (i === index) return 0\n      return num\n    }))\n    lightController(index + 1, number)\n  }\n\n  return (\n    <div className=\"board\">\n      <BigHole\n        className=\"big-bowl\"\n        pebbles={localBoard[13]}\n        bgColor={light.includes(13) ? \"whitesmoke\" : \"#f58634\"}\n      />\n      <div>\n        <div className=\"d-flex\">\n          {\n            localBoard.slice(7, 13).reverse().map((number, idx) => (\n              <Hole\n                bgColor={light.includes(12-idx) ? \"whitesmoke\" :\"#f58634\"}\n                pebbles={number}\n                key={\"player2\" + idx}\n                onClick={() => boardClickHandler(12-idx, number)}\n              />\n            ))\n          }\n        </div>\n        <div className=\"d-flex\">\n          {\n            localBoard.slice(0, 6).map((number, idx) => (\n              <Hole \n                bgColor={light.includes(idx) ? \"whitesmoke\" : \"#eb596e\"}\n                pebbles={number}\n                key={\"player1\" + idx}\n                onClick={() => boardClickHandler(idx, number)}\n              />\n            ))\n          }\n        </div>\n      </div>\n      <BigHole\n        className=\"big-bowl\"\n        pebbles={localBoard[6]}\n        bgColor={light.includes(6) ? \"whitesmoke\" : \"#eb596e\"}\n      />\n    </div>\n  )\n}\n\nexport default Board","/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/Hole.js",[],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/Pebble.js",[],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/Header.js",[],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/StatusBar.js",[],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/helpers/index.js",[],"/home/pranotoism/Documents/hacktiv8/dakonan/dakonan-client/src/components/HowToPlay.js",["177","178","179"],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":20},{"ruleId":"184","severity":1,"message":"188","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":17},{"ruleId":"184","severity":1,"message":"189","line":7,"column":8,"nodeType":"186","messageId":"187","endLine":7,"endColumn":19},{"ruleId":"190","severity":1,"message":"191","line":22,"column":6,"nodeType":"192","endLine":22,"endColumn":13,"suggestions":"193"},{"ruleId":"190","severity":1,"message":"194","line":33,"column":6,"nodeType":"192","endLine":33,"endColumn":8,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":80,"column":15,"nodeType":"198","endLine":86,"endColumn":19},{"ruleId":"184","severity":1,"message":"199","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":19},{"ruleId":"190","severity":1,"message":"200","line":16,"column":6,"nodeType":"192","endLine":16,"endColumn":8,"suggestions":"201"},{"ruleId":"196","severity":1,"message":"197","line":28,"column":9,"nodeType":"198","endLine":28,"endColumn":40},{"ruleId":"202","severity":1,"message":"203","line":31,"column":13,"nodeType":"198","endLine":31,"endColumn":25},{"ruleId":"196","severity":1,"message":"197","line":31,"column":25,"nodeType":"198","endLine":31,"endColumn":55},{"ruleId":"202","severity":1,"message":"203","line":33,"column":21,"nodeType":"198","endLine":33,"endColumn":33},{"ruleId":"202","severity":1,"message":"203","line":34,"column":21,"nodeType":"198","endLine":34,"endColumn":33},{"ruleId":"202","severity":1,"message":"203","line":35,"column":21,"nodeType":"198","endLine":35,"endColumn":33},{"ruleId":"196","severity":1,"message":"197","line":45,"column":17,"nodeType":"198","endLine":45,"endColumn":46},{"ruleId":"184","severity":1,"message":"204","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":26},{"ruleId":"196","severity":1,"message":"197","line":70,"column":11,"nodeType":"198","endLine":74,"endColumn":15},{"ruleId":"184","severity":1,"message":"205","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":16},{"ruleId":"184","severity":1,"message":"206","line":12,"column":7,"nodeType":"186","messageId":"187","endLine":12,"endColumn":13},{"ruleId":"190","severity":1,"message":"191","line":33,"column":6,"nodeType":"192","endLine":33,"endColumn":12,"suggestions":"207"},{"ruleId":"196","severity":1,"message":"197","line":73,"column":11,"nodeType":"198","endLine":77,"endColumn":15},{"ruleId":"208","severity":1,"message":"209","line":95,"column":56,"nodeType":"210","messageId":"211","endLine":95,"endColumn":58},{"ruleId":"190","severity":1,"message":"191","line":14,"column":6,"nodeType":"192","endLine":14,"endColumn":13,"suggestions":"212"},{"ruleId":"184","severity":1,"message":"213","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":15},{"ruleId":"196","severity":1,"message":"197","line":26,"column":9,"nodeType":"198","endLine":28,"endColumn":13},{"ruleId":"184","severity":1,"message":"214","line":4,"column":16,"nodeType":"186","messageId":"187","endLine":4,"endColumn":22},{"ruleId":"190","severity":1,"message":"191","line":16,"column":4,"nodeType":"192","endLine":16,"endColumn":10,"suggestions":"215"},{"ruleId":"184","severity":1,"message":"216","line":1,"column":16,"nodeType":"186","messageId":"187","endLine":1,"endColumn":24},{"ruleId":"190","severity":1,"message":"217","line":57,"column":6,"nodeType":"192","endLine":57,"endColumn":8,"suggestions":"218"},{"ruleId":"196","severity":1,"message":"197","line":106,"column":7,"nodeType":"198","endLine":106,"endColumn":46},{"ruleId":"184","severity":1,"message":"219","line":1,"column":10,"nodeType":"186","messageId":"187","endLine":1,"endColumn":13},{"ruleId":"208","severity":1,"message":"209","line":88,"column":22,"nodeType":"210","messageId":"211","endLine":88,"endColumn":24},{"ruleId":"184","severity":1,"message":"216","line":1,"column":16,"nodeType":"186","messageId":"187","endLine":1,"endColumn":24},{"ruleId":"184","severity":1,"message":"204","line":1,"column":26,"nodeType":"186","messageId":"187","endLine":1,"endColumn":35},{"ruleId":"196","severity":1,"message":"197","line":6,"column":7,"nodeType":"198","endLine":11,"endColumn":11},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],"no-unused-vars","'RegisterPage' is defined but never used.","Identifier","unusedVar","'LoginPage' is defined but never used.","'WaitingRoom' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["222"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["223"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getPlayer' is defined but never used.","React Hook useEffect has a missing dependency: 'allPlayer'. Either include it or remove the dependency array.",["224"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'Header' is defined but never used.","'socket' is assigned a value but never used.",["225"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["226"],"'manblue' is defined but never used.","'Button' is defined but never used.",["227"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'roomDetail'. Either include it or remove the dependency array.",["228"],"'set' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"229","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},"Update the dependencies array to be: [dispatch, rooms]",{"range":"242","text":"243"},"Update the dependencies array to be: [history]",{"range":"244","text":"245"},"Update the dependencies array to be: [allPlayer]",{"range":"246","text":"247"},"Update the dependencies array to be: [dispatch, turn]",{"range":"248","text":"249"},{"range":"250","text":"243"},"Update the dependencies array to be: [dispatch, show]",{"range":"251","text":"252"},"Update the dependencies array to be: [roomDetail]",{"range":"253","text":"254"},[775,782],"[dispatch, rooms]",[975,977],"[history]",[458,460],"[allPlayer]",[1078,1084],"[dispatch, turn]",[440,447],[525,531],"[dispatch, show]",[1339,1341],"[roomDetail]"]